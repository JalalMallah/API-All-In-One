{"version":3,"sources":["context.js","styles/GlobalStyle.js","components/views/LyricsSearch/LyricsContext.js","styles/MyStyledComponents.js","components/views/ExchangeRates/ExchangeRates.js","components/views/Home/Home.js","components/Loader/Loader.js","components/views/LyricsSearch/SearchForm/SearchForm.js","components/views/LyricsSearch/SongList/Item/Item.js","components/views/LyricsSearch/SongList/SongList.js","components/views/LyricsSearch/LyricsPanel/LyricsPanel.js","components/views/LyricsSearch/LyricsSearch.js","assets/404.png","components/views/PageNotFound/PageNotFound.js","components/views/Quotes/Quotes.js","components/views/Weather/Weather.js","components/views/MealFinder/Form/Form.js","components/views/MealFinder/MealsPanel/MealsPanel.js","components/views/MealFinder/SingleMealPanel/SingleMealPanel.js","components/views/MealFinder/MealFinder.js","components/Header/Navigation/Navigation.js","components/Header/Header.js","components/App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","sidebarRef","useRef","contextValue","openSidebar","current","style","setProperty","closeSidebar","Provider","value","GlobalStyle","createGlobalStyle","LyricsContext","baseURL","LyricsProvider","useState","response","setResponse","songInfo","setSongInfo","contextValues","shouldShowLoader","setShouldShowLoader","Button","styled","button","List","ul","Paragraph","p","Title","h1","Wrapper","main","ExchangeRates","selectedBaseCurrency","setSelectedBaseCurrency","selectedTargetCurrency","setSelectedTargetCurrency","conversionRate","setConversionRate","baseCurrencyAmount","setBaseCurrencyAmount","targetCurrencyAmount","setTargetCurrencyAmount","useEffect","calculateRate","fetch","then","res","json","data","result","conversion_rates","calculatedAmountInTargetCurrency","toFixed","catch","err","console","error","Container","Row","Select","onChange","e","target","Input","type","valueAsNumber","placeholder","onClick","RateInfo","section","div","select","input","Home","Subtitle","h4","Loader","LoadingAnimation","bounce","keyframes","SearchForm","handleChange","handleSubmit","term","document","querySelector","focus","Form","onSubmit","SearchInput","SearchButton","form","Item","artist","cover","preview","title","useContext","history","useHistory","location","pathname","StyledItem","StyledButton","push","li","SongList","map","song","name","album","cover_medium","id","LyricsPanel","lyrics","setLyrics","a","getLyrics","SongInfoContainer","CoverContainer","src","alt","SongInfo","SongPreviewButton","as","href","rel","icon","faPlayCircle","SongLyrics","renderLyricsPanel","LyricsSearch","searchTerm","setSearchTerm","trim","basename","process","preventDefault","searchSongs","path","exact","PageNotFound","to","faHome","Image","Image404","Link","img","Quotes","quoteText","setQuoteText","quoteAuthor","setQuoteAuthor","generateRandomQuote","useCallback","getQuotes","quotes","quotesCount","length","randomIndex","Math","random","quote","text","author","QuoteAuthor","GetNewQuoteButton","Weather","city","setCity","hasFoundCity","setHasFoundCity","weatherData","setWeatherData","getWeatherForGivenCity","URL","cod","Error","extractWeatherData","cityName","temperature","round","temp","feelsLike","feels_like","humidity","pressure","wind","speed","condition","weather","conditionDescription","description","sunrise","Date","sys","toLocaleTimeString","sunset","hasSunSet","getTime","getIcon","faMoon","faSun","faCloud","faCloudShowersHeavy","faSnowflake","faCloudRain","faBolt","CityInput","autoComplete","conditionDescriptionFormatted","slice","toUpperCase","WeatherMainInfo","className","WeatherInfoList","renderWeatherData","handleRandomClick","StyledForm","StyledInput","SearchIcon","faSearch","RandomIcon","faRandom","MealsPanel","foundMeals","getMealDetails","meals","meal","MealContainer","idMeal","strMealThumb","strMeal","SingleMealPanel","mealDetails","SingleMealContainer","Text","strCategory","strArea","ingredients","i","item","getIngredients","Instructions","strInstructions","FrameContainer","youTubeLink","strYoutube","replace","frameBorder","allow","allowFullScreen","getYouTubeVideo","MealFinder","setFoundMeals","setMealDetails","shouldShowError","setShouldShowError","mealID","getRandomMeal","searchMeal","Navigation","Sidebar","ref","CloseSidebarIcon","faTimes","ListItem","StyledNavLink","activeClassName","nav","NavLink","Header","HeaderWrapper","Logo","IconWrapper","Icon","faGithubAlt","faLinkedinIn","faTwitter","OpenSidebarIcon","faBars","header","App","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"wLAEaA,EAAaC,0BAgBXC,EAdK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfC,EAAaC,mBAIbC,EAAe,CACnBF,aACAG,YALkB,kBAAMH,EAAWI,QAAQC,MAAMC,YAAY,YAAa,kBAM1EC,aALmB,kBAAMP,EAAWI,QAAQC,MAAMC,YAAY,YAAa,sBAQ7E,OAAO,cAACV,EAAWY,SAAZ,CAAqBC,MAAOP,EAA5B,SAA2CH,K,cCcrCW,EA3BKC,YAAH,ye,cCAJC,EAAgBf,0BAEhBgB,EAAU,yBAER,SAASC,EAAT,GAAuC,IAAbf,EAAY,EAAZA,SAAY,EACnBgB,mBAAS,IADU,mBAC5CC,EAD4C,KAClCC,EADkC,OAEnBF,mBAAS,IAFU,mBAE5CG,EAF4C,KAElCC,EAFkC,OAGHJ,oBAAS,GAHN,mBAK7CK,EAAgB,CACpBJ,WACAC,cACAC,WACAC,cACAE,iBAViD,KAWjDC,oBAXiD,MAcnD,OAAO,cAACV,EAAcJ,SAAf,CAAwBC,MAAOW,EAA/B,SAA+CrB,IClBjD,I,UAAMwB,EAASC,IAAOC,OAAV,0hBA4BNC,EAAOF,IAAOG,GAAV,sDAIJC,EAAYJ,IAAOK,EAAV,wNAcTC,EAAQN,IAAOO,GAAV,mPAeLC,EAAUR,IAAOS,KAAV,4PCxDL,SAASC,IAAiB,IAAD,EACkBnB,mBAAS,OAD3B,mBAC/BoB,EAD+B,KACTC,EADS,OAEsBrB,mBAAS,OAF/B,mBAE/BsB,EAF+B,KAEPC,EAFO,OAIMvB,qBAJN,mBAI/BwB,EAJ+B,KAIfC,EAJe,OAMczB,mBAAS,GANvB,mBAM/B0B,EAN+B,KAMXC,EANW,OAOkB3B,mBAAS,IAP3B,mBAO/B4B,EAP+B,KAOTC,EAPS,KAStCC,qBAAU,WACRC,MAEC,CAACX,EAAsBE,EAAwBI,IAElD,IAMMK,EAAgB,WACpB,IAAMjC,EAAO,6CAvBF,2BAuBE,mBAA0DsB,GAEvEY,MAAMlC,GACHmC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,YAAhBA,EAAKC,OAAT,CAEA,IAAMb,EAAiBY,EAAKE,iBAAiBhB,GACvCiB,IAAqCb,EAAqBF,GAAgBgB,QAAQ,GACxFf,EAAkBD,GAClBK,EAAwBU,OAEzBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAWhC,OACE,eAACzB,EAAD,WACE,cAACF,EAAD,oDACA,cAACF,EAAD,kFACA,eAACgC,EAAD,WACE,eAACC,EAAD,WACE,eAACC,EAAD,CAAQrD,MAAO0B,EAAsB4B,SApCd,SAAAC,GAAC,OAAI5B,EAAwB4B,EAAEC,OAAOxD,QAoC7D,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAACyD,EAAD,CACEC,KAAK,SACL1D,MAAOgC,EACPsB,SA1FoB,SAAAC,GAAC,OAAItB,EAAsBsB,EAAEC,OAAOG,gBA2FxDC,YAAY,SAGhB,eAACR,EAAD,WACE,cAACtC,EAAD,CAAQ+C,QAzEO,WACrBlC,EAAwBC,GACxBC,EAA0BH,IAuEpB,kBACA,cAACoC,EAAD,UAAWhC,GA7EE,YACdJ,EADc,cACYI,EADZ,YAC8BF,QA8E7C,eAACwB,EAAD,WACE,eAACC,EAAD,CAAQrD,MAAO4B,EAAwB0B,SArGd,SAAAC,GAAC,OAAI1B,EAA0B0B,EAAEC,OAAOxD,QAqGjE,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAACyD,EAAD,CACEC,KAAK,SACL1D,MAAOkC,EACPoB,SA3JsB,SAAAC,GAAC,OAAIpB,EAAwBoB,EAAEC,OAAOG,gBA4J5DC,YAAY,eAQxB,I,IAAMT,EAAYpC,IAAOgD,QAAV,mHAOTX,EAAMrC,IAAOiD,IAAV,8IAQHX,EAAStC,IAAOkD,OAAV,oUAiBNR,EAAQ1C,IAAOmD,MAAV,mUAiBLJ,EAAW/C,YAAOI,EAAPJ,CAAH,0CCzOC,SAASoD,IACtB,OACE,eAAC5C,EAAD,WACE,cAACF,EAAD,iCACA,cAACF,EAAD,4TAMA,cAACA,EAAD,yCACA,eAAC,EAAD,WACE,2EACA,oEACA,6DACA,0DACA,6DAEF,cAACiD,EAAD,qCAKN,I,IAAMnD,EAAOF,IAAOG,GAAV,6SAmBJkD,EAAWrD,IAAOsD,GAAV,8K,yBC3CC,SAASC,IACtB,OACE,eAACC,GAAD,WACE,yBACA,yBACA,4BAKN,I,OAAMC,GAASC,YAAH,iIAUNF,GAAmBxD,IAAOiD,IAAV,gbAYLQ,IC9BF,SAASE,GAAT,GAA2D,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,KAK/D,OAJAzC,qBAAU,WACR0C,SAASC,cAAc,SAASC,UAC/B,IAGD,eAACC,GAAD,CAAMC,SAAUN,EAAhB,UACE,cAACO,GAAD,CACEzB,KAAK,OACL1D,MAAO6E,EACPvB,SAAUqB,EACVf,YAAY,iCAEd,cAACwB,GAAD,wBAWN,I,MAAMH,GAAOlE,IAAOsE,KAAV,gPAeJF,GAAcpE,IAAOmD,MAAV,+QAeXkB,GAAerE,YAAOD,EAAPC,CAAH,oICpDH,SAASuE,GAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAC7ChF,EAAgBiF,qBAAWxF,GAA3BO,YACFkF,EAAUC,cACVC,EAAW,CACfC,SAAU,4BAcZ,OACE,eAACC,GAAD,WACE,iCACGT,EADH,MACcG,KAEd,cAACO,GAAD,CAAcpC,QAhBlB,WACE+B,EAAQM,KAAKJ,GAObpF,EANiB,CACf6E,SACAC,QACAC,UACAC,WAUA,2BAYN,IAAMM,GAAajF,IAAOoF,GAAV,8OAaVF,GAAelF,YAAOD,EAAPC,CAAH,uGCjDH,SAASqF,KAAY,IAC1B7F,EAAaoF,qBAAWxF,GAAxBI,SAER,OACE,mCACE,cAACU,EAAD,UACGV,EAASmC,KAAK2D,KAAI,SAAAC,GAAI,OACrB,cAAChB,GAAD,CAEEC,OAAQe,EAAKf,OAAOgB,KACpBb,MAAOY,EAAKZ,MACZF,MAAOc,EAAKE,MAAMC,aAClBhB,QAASa,EAAKb,SAJTa,EAAKI,W,mCCNP,SAASC,KAAe,IAAD,EACRrG,mBAAS,IADD,mBAC7BsG,EAD6B,KACrBC,EADqB,OAEMlB,qBAAWxF,GAA7CU,EAF4B,EAE5BA,oBAAqBJ,EAFO,EAEPA,SAFO,4CASpC,kCAAAqG,EAAA,6DACUvB,EAAkB9E,EAAlB8E,OAAQG,EAAUjF,EAAViF,MADlB,SAEoBpD,MAAM,GAAD,OAAIlC,EAAJ,eAAkBmF,EAAlB,YAA4BG,IAFrD,cAEQlD,EAFR,gBAGqBA,EAAIC,OAHzB,OAGQC,EAHR,OAIEmE,EAAUnE,EAAKkE,QACf/F,GAAoB,GALtB,4CAToC,sBAuCpC,OAnCAuB,qBAAU,WACRvB,GAAoB,GALc,mCAMlCkG,KACC,IAgCI,mCAAGH,GAtBV,WAA8B,IACpBrB,EAAkC9E,EAAlC8E,OAAQC,EAA0B/E,EAA1B+E,MAAOC,EAAmBhF,EAAnBgF,QAASC,EAAUjF,EAAViF,MAEhC,OACE,qCACE,eAACsB,GAAD,WACE,cAACC,GAAD,UACE,qBAAKC,IAAK1B,EAAO2B,IAAI,kBAEvB,eAACC,GAAD,WACE,6BAAK1B,IACL,6BAAKH,IACL,eAAC8B,GAAD,CAAmBC,GAAG,IAAIC,KAAM9B,EAASjC,OAAO,SAASgE,IAAI,aAA7D,UACE,cAAC,KAAD,CAAiBC,KAAMC,OADzB,yBAKJ,cAACC,GAAD,UAAaf,OAKCgB,KAGtB,IAAMZ,GAAoBjG,IAAOgD,QAAV,wHAOjBkD,GAAiBlG,IAAOgD,QAAV,gIAUdqD,GAAWrG,IAAOgD,QAAV,wPAiBRsD,GAAoBtG,YAAOD,EAAPC,CAAH,iIAOjB4G,GAAa5G,IAAOgD,QAAV,8ECjFD,SAAS8D,KAAgB,IAAD,EACDvH,mBAAS,IADR,mBAC9BwH,EAD8B,KAClBC,EADkB,OAGoCpC,qBACvExF,GADMI,EAH6B,EAG7BA,SAAUC,EAHmB,EAGnBA,YAAaK,EAHM,EAGNA,oBAAqBD,EAHf,EAGeA,iBAHf,4CAoBrC,WAA2BiE,GAA3B,iBAAAiC,EAAA,sEACoBxE,MAAM,GAAD,OAAIlC,EAAJ,oBAAuByE,EAAKmD,SADrD,cACQxF,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAIElC,EAAYkC,GACZ7B,GAAoB,GALtB,4CApBqC,sBA4BrC,OACE,cAAC,IAAD,CAAeoH,SAAUC,WAAzB,SACE,eAAC3G,EAAD,WACE,cAACF,EAAD,mEACA,cAACqD,GAAD,CACEC,aA1BR,SAA2BpB,GACzBwE,EAAcxE,EAAEC,OAAOxD,QA0BjB4E,aAvBR,SAA0BrB,GACxBA,EAAE4E,iBACGL,KAb8B,oCAenCM,CAAYN,GACZC,EAAc,IACdlH,GAAoB,KAkBdgE,KAAMiD,IAEPlH,GAAoB,cAAC0D,EAAD,IACrB,cAAC,IAAD,CAAO+D,KAAK,cAAcC,OAAK,EAA/B,SACG/H,GAAY,cAAC6F,GAAD,MAEf,cAAC,IAAD,CAAOiC,KAAK,2BAA2BC,OAAK,EAA5C,SACE,cAAC3B,GAAD,WCrDK,I,MAAA,OAA0B,gCCW1B,SAAS4B,KACtB,OACE,eAAChH,EAAD,WACE,cAACF,EAAD,uBACA,cAACF,EAAD,mEACA,eAAC,GAAD,CAAQqH,GAAG,IAAX,0BACe,cAAC,KAAD,CAAiBf,KAAMgB,UAEtC,cAACC,GAAD,CAAOxB,IAAKyB,GAAUxB,IAAI,sBAKhC,I,MAAMrG,GAASC,YAAO6H,IAAP7H,CAAH,gbAqBN2H,GAAQ3H,IAAO8H,IAAV,gMCtCI,SAASC,KAAU,IAAD,EACGxI,mBAAS,IADZ,mBACxByI,EADwB,KACbC,EADa,OAEO1I,mBAAS,IAFhB,mBAExB2I,EAFwB,KAEXC,EAFW,KAIzBC,EAAsBC,sBAAW,sBAAC,kCAAAtC,EAAA,sEACjBuC,IADiB,OAChCC,EADgC,OAEhCC,EAAcD,EAAOE,OACrBC,KAAiBC,KAAKC,SAAWJ,GACjCK,EAAQN,EAAOG,GACrBT,EAAa,IAAD,OAAKY,EAAMC,KAAX,MACZX,EAAeU,EAAME,QANiB,2CAOrC,IAEGT,EAAS,uCAAG,8BAAAvC,EAAA,sEACExE,MAhBV,+BAeQ,cACVE,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAGTA,GAHS,2CAAH,qDAUf,OAJAN,qBAAU,WACR+G,MACC,CAACA,IAGF,eAAC5H,EAAD,WACE,cAACF,EAAD,yDACA,cAACF,EAAD,UAAY4H,IACZ,cAACgB,GAAD,iBAAcd,QAAd,IAAcA,IAAe,mBAC7B,cAACe,GAAD,CAAmBnG,QAASsF,EAA5B,8BAKN,I,eAAMY,GAAchJ,YAAOI,EAAPJ,CAAH,gIAOXiJ,GAAoBjJ,YAAOD,EAAPC,CAAH,0EC3BR,SAASkJ,KAAW,IAAD,EACR3J,mBAAS,IADD,mBACzB4J,EADyB,KACnBC,EADmB,OAEQ7J,oBAAS,GAFjB,mBAEzB8J,EAFyB,KAEXC,EAFW,OAGM/J,mBAAS,IAHf,mBAGzBgK,EAHyB,KAGZC,EAHY,OAIgBjK,oBAAS,GAJzB,mBAIzBM,EAJyB,KAIPC,EAJO,KAMhCuB,qBAAU,WACR0C,SAASC,cAAc,SAASC,UAC/B,IAEH,IAUMwF,EAAyB,SAAAN,GAC7B,IACMO,EAAG,UADa,uCACb,4DAAuEP,EAAKlC,OAA5E,kBAzBE,mCAyBF,iBACT1F,MAAMmI,GACHlI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAiB,MAAbA,EAAKgI,IAEP,MADAL,GAAgB,GACV,IAAIM,MAAM,qBAGlBN,GAAgB,GAChBO,EAAmBlI,MAEpBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAG1B4H,EAAqB,SAAAlI,GACzB,IAAM4H,EAAc,CAClBO,SAAUnI,EAAK6D,KACfuE,YAAapB,KAAKqB,MAAMrI,EAAKlB,KAAKwJ,MAClCC,UAAWvB,KAAKqB,MAAMrI,EAAKlB,KAAK0J,YAChCC,SAAUzI,EAAKlB,KAAK2J,SACpBC,SAAU1I,EAAKlB,KAAK4J,SACpBC,KAAM3B,KAAKqB,MA9Ca,IA8CPrI,EAAK2I,KAAKC,OAC3BC,UAAW7I,EAAK8I,QAAQ,GAAGhK,KAC3BiK,qBAAsB/I,EAAK8I,QAAQ,GAAGE,YACtCC,QAAS,IAAIC,KAAwB,IAAnBlJ,EAAKmJ,IAAIF,SAAgBG,qBAC3CC,OAAQ,IAAIH,KAAuB,IAAlBlJ,EAAKmJ,IAAIE,QAAeD,qBACzCE,WAAW,IAAIJ,MAAOK,WAA+B,IAAlBvJ,EAAKmJ,IAAIE,QAG9CxB,EAAeD,GACfzJ,GAAoB,IAoDhBqL,EAAU,SAACX,EAAWS,GAC1B,MAAkB,UAAdT,EACES,EAAkB,cAAC,KAAD,CAAiBvE,KAAM0E,OACtC,cAAC,KAAD,CAAiB1E,KAAM2E,OAEd,WAAdb,EAA+B,cAAC,KAAD,CAAiB9D,KAAM4E,OACxC,SAAdd,EAA6B,cAAC,KAAD,CAAiB9D,KAAM6E,OACtC,SAAdf,EAA6B,cAAC,KAAD,CAAiB9D,KAAM8E,OACtC,YAAdhB,EAAgC,cAAC,KAAD,CAAiB9D,KAAM+E,OACzC,iBAAdjB,EAAqC,cAAC,KAAD,CAAiB9D,KAAMgF,OACzD,MAGT,OACE,eAAClL,EAAD,WACE,cAACF,EAAD,0EACA,eAAC,GAAD,WACE,cAACqL,GAAD,CACEhJ,KAAK,OACLgD,GAAG,OACH1G,MAAOkK,EACP5G,SApHkB,SAAAC,GAAC,OAAI4G,EAAQ5G,EAAEC,OAAOxD,QAqHxC4D,YAAY,cACZ+I,aAAa,QAEf,cAAC,GAAD,CAAc9I,QAvHM,SAAAN,GACxBA,EAAE4E,iBACG+B,IAELrJ,GAAoB,GACpB2J,EAAuBN,GACvBC,EAAQ,MAiHJ,uBAEDvJ,GAAoB,cAAC0D,EAAD,IACpBgG,GA7EqB,WAAO,IAE7BO,EAWEP,EAXFO,SACAU,EAUEjB,EAVFiB,UACAE,EASEnB,EATFmB,qBACAR,EAQEX,EARFW,UACAe,EAOE1B,EAPF0B,UACAb,EAMEb,EANFa,SACAC,EAKEd,EALFc,SACAO,EAIErB,EAJFqB,QACAI,EAGEzB,EAHFyB,OACAjB,EAEER,EAFFQ,YACAO,EACEf,EADFe,KAGIuB,EACJnB,EAAqBoB,MAAM,EAAG,GAAGC,cAAgBrB,EAAqBoB,MAAM,GAE9E,OACE,oCACE,eAACE,GAAD,WACE,mBAAGC,UAAU,OAAb,SAAqBnC,IACrB,oBAAGmC,UAAU,cAAb,UAA4BlC,EAA5B,UACA,wBAAOkC,UAAU,aAAjB,wBAA0C/B,EAA1C,UACA,oBAAG+B,UAAU,YAAb,UACGJ,EADH,IACmCV,EAAQX,EAAWS,SAGxD,eAACiB,GAAD,WACE,uCACO,iCAAO5B,EAAP,cAEP,2CACW,iCAAOF,EAAP,UAEX,2CACW,iCAAOC,EAAP,aAEX,0CACU,+BAAOO,OAEjB,yCACS,+BAAOI,aAmCJmB,IACd9C,GAAgB,cAACjJ,EAAD,oDAKxB,I,YAAM8D,GAAOlE,IAAOsE,KAAV,0PAeJqH,GAAY3L,IAAOmD,MAAV,mYAoBTkB,GAAerE,YAAOD,EAAPC,CAAH,6HAMZgM,GAAkBhM,IAAOgD,QAAV,2iBAwCfkJ,GAAkBlM,IAAOG,GAAV,obCvON,SAAS+D,GAAT,GAAwE,IAAxDN,EAAuD,EAAvDA,aAAcwI,EAAyC,EAAzCA,kBAAmBvI,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,KAC5E,OACE,eAACuI,GAAD,CAAYlI,SAAUN,EAAtB,UACE,cAACyI,GAAD,CACE3J,KAAK,OACLE,YAAY,sBACZ5D,MAAO6E,EACPvB,SAAUqB,IAEZ,cAAC2I,GAAD,UACE,cAAC,KAAD,CAAiB7F,KAAM8F,SAEzB,cAACC,GAAD,CAAY3J,QAASsJ,EAArB,SACE,cAAC,KAAD,CAAiB1F,KAAMgG,YAa/B,I,MAAML,GAAarM,IAAOsE,KAAV,mNAYVgI,GAActM,IAAOmD,MAAV,yZAqBXoJ,GAAavM,YAAOD,EAAPC,CAAH,sFAKVyM,GAAazM,YAAOD,EAAPC,CAAH,qGCrED,SAAS2M,GAAT,GAA2D,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,eACzCC,GADiE,EAARhJ,KACjD8I,EAAWtH,KAAI,SAAAyH,GAAI,OAC/B,eAACC,GAAD,CAAiClK,QAAS,kBAAM+J,EAAeE,EAAKE,SAApE,UACE,qBAAK9G,IAAK4G,EAAKG,aAAc9G,IAAK2G,EAAKI,UACvC,6BAAKJ,EAAKI,YAFQJ,EAAKE,YAM3B,OACE,mCACE,cAAC,GAAD,UAAUH,MAWhB,I,YAAMtM,GAAUR,IAAOgD,QAAV,+LAUPgK,GAAgBhN,IAAOiD,IAAV,qrBC7BJ,SAASmK,GAAT,GAA2C,IAAhBC,EAAe,EAAfA,YA6BxC,OACE,eAACC,GAAD,WACE,6BAAKD,EAAYF,UACjB,qBAAKhH,IAAKkH,EAAYH,aAAc9G,IAAKiH,EAAYF,UACrD,eAACI,GAAD,wBAAiBF,EAAYG,eAC7B,eAACD,GAAD,sBAAeF,EAAYI,WAC3B,8CACA,6BAnCJ,WAGE,IAFA,IAAIC,EAAc,GAETC,EAAI,EAAGA,GAAK,IACdN,EAAY,gBAAD,OAAiBM,IADVA,IAEvBD,EAAYvI,KAAZ,UAAoBkI,EAAY,gBAAD,OAAiBM,IAAhD,cAA0DN,EAAY,aAAD,OAAcM,MAOrF,OAJwBD,EAAYpI,KAAI,SAAAsI,GAAI,OAC1C,6BAAgBA,EAAK9B,MAAM,EAAG,GAAGC,cAAgB6B,EAAK9B,MAAM,IAAnD8B,MA0BJC,KACL,+CACA,cAACC,GAAD,UAAeT,EAAYU,kBAC3B,cAACC,GAAD,UAvBJ,WACE,IAAMC,EAAcZ,EAAYa,WAAWC,QAAQ,WAAY,UAC/D,OACE,wBACEhI,IAAK8H,EACLtJ,MAAO0I,EAAYF,QACnBiB,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAeAC,QASvB,I,eAAMjB,GAAsBtN,IAAOgD,QAAV,4aA8BnBuK,GAAOvN,YAAOI,EAAPJ,CAAH,qDAIJ8N,GAAe9N,YAAOI,EAAPJ,CAAH,wDAIZgO,GAAiBhO,IAAOiD,IAAV,mLCpFL,SAASuL,KAAc,IAAD,EACCjP,mBAAS,IADV,mBAC5BwH,EAD4B,KAChBC,EADgB,OAECzH,mBAAS,IAFV,mBAE5BqN,EAF4B,KAEhB6B,EAFgB,OAGalP,oBAAS,GAHtB,mBAG5BM,EAH4B,KAGVC,EAHU,OAIGP,mBAAS,IAJZ,mBAI5B8N,EAJ4B,KAIfqB,EAJe,OAKWnP,oBAAS,GALpB,mBAK5BoP,EAL4B,KAKXC,EALW,iDAsBnC,WAA0B9K,GAA1B,mBAAAiC,EAAA,6DACQ2D,EADR,+DACsE5F,EAAKmD,QAD3E,SAEoB1F,MAAMmI,GAF1B,cAEQjI,EAFR,gBAGqBA,EAAIC,OAHzB,UAGQC,EAHR,OAIE8M,EAAc9M,EAAKmL,OACnBhN,GAAoB,GACf6B,EAAKmL,MANZ,wBAOI8B,GAAmB,GAPvB,gEAtBmC,kEAwCnC,8BAAA7I,EAAA,6DACE6I,GAAmB,GACP,qDAFd,SAGoBrN,MADN,sDAFd,cAGQE,EAHR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKE+M,EAAe/M,EAAKmL,MAAM,IAC1BhN,GAAoB,GANtB,6CAxCmC,kEAiDnC,WAA8B+O,GAA9B,mBAAA9I,EAAA,6DACEjG,GAAoB,GACd4J,EAFR,+DAEsEmF,GAFtE,SAGoBtN,MAAMmI,GAH1B,cAGQjI,EAHR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKE+M,EAAe/M,EAAKmL,MAAM,IAC1BhN,GAAoB,GANtB,6CAjDmC,sBA0DnC,OACE,eAACU,EAAD,WACE,cAACF,EAAD,iEACA,cAAC,GAAD,CACEwD,KAAMiD,EACNnD,aAxDN,SAA2BpB,GACzBwE,EAAcxE,EAAEC,OAAOxD,QAwDnBmN,kBA9BN,SAA2B5J,GACzBA,EAAE4E,iBAnC+B,mCAoCjC0H,GACAhP,GAAoB,IA4BhB+D,aAtDN,SAAgCrB,GAC9BA,EAAE4E,iBACGL,IAELjH,GAAoB,GAfa,oCAgBjCiP,CAAWhI,GACXC,EAAc,IACd0H,EAAe,IACfE,GAAmB,OAgDhB/O,GAAoB,cAAC0D,EAAD,IACpBoL,GAAmB,qEACnB/B,IAAeS,GACd,cAACV,GAAD,CAAYC,WAAYA,EAAYC,eAtEP,4CAsEuC/I,KAAMiD,IAE3EsG,GAAe,cAACD,GAAD,CAAiBC,YAAaA,OCvErC,SAAS2B,KAAc,IAAD,EACEpK,qBAAWxG,GAAxCW,EAD2B,EAC3BA,aAAcP,EADa,EACbA,WAEtB,OACE,eAACyQ,GAAD,CAASC,IAAK1Q,EAAd,UACE,cAAC2Q,GAAD,CAAkBrM,QAAS/D,EAA3B,SACE,cAAC,KAAD,CAAiB2H,KAAM0I,SAEzB,eAAC,GAAD,WACE,cAACC,GAAD,UACE,cAACC,GAAD,CAAe7H,GAAG,IAAIF,OAAK,EAACgI,gBAAgB,cAAczM,QAAS/D,EAAnE,oBAIF,cAACsQ,GAAD,UACE,cAACC,GAAD,CAAe7H,GAAG,UAAU8H,gBAAgB,cAAczM,QAAS/D,EAAnE,sBAIF,cAACsQ,GAAD,UACE,cAACC,GAAD,CAAe7H,GAAG,WAAW8H,gBAAgB,cAAczM,QAAS/D,EAApE,uBAIF,cAACsQ,GAAD,UACE,cAACC,GAAD,CAAe7H,GAAG,kBAAkB8H,gBAAgB,cAAczM,QAAS/D,EAA3E,8BAIF,cAACsQ,GAAD,UACE,cAACC,GAAD,CACE7H,GAAG,cACHF,OAAK,EACLgI,gBAAgB,cAChBzM,QAAS/D,EAJX,2BASF,cAACsQ,GAAD,UACE,cAACC,GAAD,CACE7H,GAAG,eACHF,OAAK,EACLgI,gBAAgB,cAChBzM,QAAS/D,EAJX,iCAcV,I,eAAMkQ,GAAUjP,IAAOwP,IAAV,gaAuBPL,GAAmBnP,IAAOC,OAAV,ucA6BhBC,GAAOF,IAAOG,GAAV,wDAIJkP,GAAWrP,IAAOoF,GAAV,uIASRkK,GAAgBtP,YAAOyP,IAAPzP,CAAH,ukB,SCpHJ,SAAS0P,KAAU,IACxB/Q,EAAgBiG,qBAAWxG,GAA3BO,YAER,OACE,eAACgR,GAAD,WACE,cAACC,GAAD,CAAMnI,GAAG,IAAT,qBACA,eAACoI,GAAD,WACE,cAACC,GAAD,CAAMvJ,GAAG,IAAIC,KAAK,iCAAiC/D,OAAO,SAA1D,SACE,cAAC,KAAD,CAAiBiE,KAAMqJ,SAEzB,cAACD,GAAD,CAAMvJ,GAAG,IAAIC,KAAK,2CAA2C/D,OAAO,SAApE,SACE,cAAC,KAAD,CAAiBiE,KAAMsJ,SAEzB,cAACF,GAAD,CAAMvJ,GAAG,IAAIC,KAAK,oCAAoC/D,OAAO,SAA7D,SACE,cAAC,KAAD,CAAiBiE,KAAMuJ,SAEzB,cAACC,GAAD,CAAiBpN,QAASnE,EAA1B,SACE,cAAC,KAAD,CAAiB+H,KAAMyJ,YAG3B,cAACnB,GAAD,OAKN,IAAMW,GAAgB3P,IAAOoQ,OAAV,yZAuBbP,GAAc7P,IAAOiD,IAAV,4CAIX2M,GAAO5P,YAAO6H,IAAP7H,CAAH,4VAmBJkQ,GAAkBlQ,IAAOC,OAAV,uZAuBf6P,GAAO9P,YAAOkQ,GAAPlQ,CAAH,6PC3EKqQ,GAjBH,WACV,OACE,eAAC/Q,EAAD,WACE,cAACoQ,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpI,KAAK,IAAIC,OAAK,EAAC+I,UAAWlN,IACjC,cAAC,IAAD,CAAOkE,KAAK,UAAUgJ,UAAWvI,KACjC,cAAC,IAAD,CAAOT,KAAK,WAAWgJ,UAAWpH,KAClC,cAAC,IAAD,CAAO5B,KAAK,kBAAkBgJ,UAAW5P,IACzC,cAAC,IAAD,CAAO4G,KAAK,cAAcC,OAAK,EAAC+I,UAAWxJ,KAC3C,cAAC,IAAD,CAAOQ,KAAK,eAAeC,OAAK,EAAC+I,UAAW9B,KAC5C,cAAC,IAAD,CAAO8B,UAAW9I,YChB1B+I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAevJ,SAAUC,WAAzB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,GAAD,WAINpD,SAAS2M,eAAe,W","file":"static/js/main.ad7e6517.chunk.js","sourcesContent":["import { createContext, useRef } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const sidebarRef = useRef();\r\n  const openSidebar = () => sidebarRef.current.style.setProperty('transform', 'translateX(0)');\r\n  const closeSidebar = () => sidebarRef.current.style.setProperty('transform', 'translateX(100%)');\r\n\r\n  const contextValue = {\r\n    sidebarRef,\r\n    openSidebar,\r\n    closeSidebar,\r\n  };\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppProvider;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  :root {\r\n    --body-background: #dcdde1;\r\n    --custom-yellow: #fbc531;\r\n    --dark-blue: #192a56;\r\n    --light-blue: #273c75;\r\n    --light-gray: #f5f6fa;\r\n    --main-font: 'Red Hat Text', sans-serif;\r\n    font-family: var(--main-font);\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    background-color: var(--body-background);\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const LyricsContext = createContext();\r\n\r\nexport const baseURL = 'https://api.lyrics.ovh';\r\n\r\nexport default function LyricsProvider({ children }) {\r\n  const [response, setResponse] = useState('');\r\n  const [songInfo, setSongInfo] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n\r\n  const contextValues = {\r\n    response,\r\n    setResponse,\r\n    songInfo,\r\n    setSongInfo,\r\n    shouldShowLoader,\r\n    setShouldShowLoader,\r\n  };\r\n\r\n  return <LyricsContext.Provider value={contextValues}>{children}</LyricsContext.Provider>;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  padding: 0.8rem 2rem;\r\n  border: none;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: var(--dark-blue);\r\n  color: var(--light-gray);\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  transition: background-color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    transform: scale(0.98);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--light-blue);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin: 0 0 1rem;\r\n  font-size: 1.5rem;\r\n  line-height: 1.4;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin: 0 0 1rem;\r\n  font-size: 1.8rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 1.5rem;\r\n    font-size: 2.4rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.main`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 1rem 1.5rem 3rem;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 360px) {\r\n    padding: 1.5rem 2rem 3rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 3rem 2rem 3rem;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nconst APIKey = '65ae7a288dd355c89554072f';\r\n\r\nexport default function ExchangeRates() {\r\n  const [selectedBaseCurrency, setSelectedBaseCurrency] = useState('USD');\r\n  const [selectedTargetCurrency, setSelectedTargetCurrency] = useState('EUR');\r\n\r\n  const [conversionRate, setConversionRate] = useState();\r\n\r\n  const [baseCurrencyAmount, setBaseCurrencyAmount] = useState(1);\r\n  const [targetCurrencyAmount, setTargetCurrencyAmount] = useState('');\r\n\r\n  useEffect(() => {\r\n    calculateRate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedBaseCurrency, selectedTargetCurrency, baseCurrencyAmount]);\r\n\r\n  const handleBaseSelectChange = e => setSelectedBaseCurrency(e.target.value);\r\n  const handleTargetSelectChange = e => setSelectedTargetCurrency(e.target.value);\r\n\r\n  const handleBaseInputChange = e => setBaseCurrencyAmount(e.target.valueAsNumber);\r\n  const handleTargetInputChange = e => setTargetCurrencyAmount(e.target.valueAsNumber);\r\n\r\n  const calculateRate = () => {\r\n    const baseURL = `https://v6.exchangerate-api.com/v6/${APIKey}/latest/${selectedBaseCurrency}`;\r\n\r\n    fetch(baseURL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.result !== 'success') return;\r\n\r\n        const conversionRate = data.conversion_rates[selectedTargetCurrency];\r\n        const calculatedAmountInTargetCurrency = +(baseCurrencyAmount * conversionRate).toFixed(2);\r\n        setConversionRate(conversionRate);\r\n        setTargetCurrencyAmount(calculatedAmountInTargetCurrency);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const showRateInfo = () =>\r\n    `1 ${selectedBaseCurrency} = ${conversionRate} ${selectedTargetCurrency}`;\r\n\r\n  const swapCurrencies = () => {\r\n    setSelectedBaseCurrency(selectedTargetCurrency);\r\n    setSelectedTargetCurrency(selectedBaseCurrency);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Exchange Rate Calculator 💰</Title>\r\n      <Paragraph>Choose the currency and provide the amout to get the exchange rate!</Paragraph>\r\n      <Container>\r\n        <Row>\r\n          <Select value={selectedBaseCurrency} onChange={handleBaseSelectChange}>\r\n            <option value='AED'>AED</option>\r\n            <option value='ARS'>ARS</option>\r\n            <option value='AUD'>AUD</option>\r\n            <option value='BGN'>BGN</option>\r\n            <option value='BRL'>BRL</option>\r\n            <option value='BSD'>BSD</option>\r\n            <option value='CAD'>CAD</option>\r\n            <option value='CHF'>CHF</option>\r\n            <option value='CLP'>CLP</option>\r\n            <option value='CNY'>CNY</option>\r\n            <option value='COP'>COP</option>\r\n            <option value='CZK'>CZK</option>\r\n            <option value='DKK'>DKK</option>\r\n            <option value='DOP'>DOP</option>\r\n            <option value='EGP'>EGP</option>\r\n            <option value='EUR'>EUR</option>\r\n            <option value='FJD'>FJD</option>\r\n            <option value='GBP'>GBP</option>\r\n            <option value='GTQ'>GTQ</option>\r\n            <option value='HKD'>HKD</option>\r\n            <option value='HRK'>HRK</option>\r\n            <option value='HUF'>HUF</option>\r\n            <option value='IDR'>IDR</option>\r\n            <option value='ILS'>ILS</option>\r\n            <option value='INR'>INR</option>\r\n            <option value='ISK'>ISK</option>\r\n            <option value='JPY'>JPY</option>\r\n            <option value='KRW'>KRW</option>\r\n            <option value='KZT'>KZT</option>\r\n            <option value='MXN'>MXN</option>\r\n            <option value='MYR'>MYR</option>\r\n            <option value='NOK'>NOK</option>\r\n            <option value='NZD'>NZD</option>\r\n            <option value='PAB'>PAB</option>\r\n            <option value='PEN'>PEN</option>\r\n            <option value='PHP'>PHP</option>\r\n            <option value='PKR'>PKR</option>\r\n            <option value='PLN'>PLN</option>\r\n            <option value='PYG'>PYG</option>\r\n            <option value='RON'>RON</option>\r\n            <option value='RUB'>RUB</option>\r\n            <option value='SAR'>SAR</option>\r\n            <option value='SEK'>SEK</option>\r\n            <option value='SGD'>SGD</option>\r\n            <option value='THB'>THB</option>\r\n            <option value='TRY'>TRY</option>\r\n            <option value='TWD'>TWD</option>\r\n            <option value='UAH'>UAH</option>\r\n            <option value='USD'>USD</option>\r\n            <option value='UYU'>UYU</option>\r\n            <option value='VND'>VND</option>\r\n            <option value='ZAR'>ZAR</option>\r\n          </Select>\r\n          <Input\r\n            type='number'\r\n            value={baseCurrencyAmount}\r\n            onChange={handleBaseInputChange}\r\n            placeholder='0'\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Button onClick={swapCurrencies}>Swap</Button>\r\n          <RateInfo>{conversionRate && showRateInfo()}</RateInfo>\r\n        </Row>\r\n        <Row>\r\n          <Select value={selectedTargetCurrency} onChange={handleTargetSelectChange}>\r\n            <option value='AED'>AED</option>\r\n            <option value='ARS'>ARS</option>\r\n            <option value='AUD'>AUD</option>\r\n            <option value='BGN'>BGN</option>\r\n            <option value='BRL'>BRL</option>\r\n            <option value='BSD'>BSD</option>\r\n            <option value='CAD'>CAD</option>\r\n            <option value='CHF'>CHF</option>\r\n            <option value='CLP'>CLP</option>\r\n            <option value='CNY'>CNY</option>\r\n            <option value='COP'>COP</option>\r\n            <option value='CZK'>CZK</option>\r\n            <option value='DKK'>DKK</option>\r\n            <option value='DOP'>DOP</option>\r\n            <option value='EGP'>EGP</option>\r\n            <option value='EUR'>EUR</option>\r\n            <option value='FJD'>FJD</option>\r\n            <option value='GBP'>GBP</option>\r\n            <option value='GTQ'>GTQ</option>\r\n            <option value='HKD'>HKD</option>\r\n            <option value='HRK'>HRK</option>\r\n            <option value='HUF'>HUF</option>\r\n            <option value='IDR'>IDR</option>\r\n            <option value='ILS'>ILS</option>\r\n            <option value='INR'>INR</option>\r\n            <option value='ISK'>ISK</option>\r\n            <option value='JPY'>JPY</option>\r\n            <option value='KRW'>KRW</option>\r\n            <option value='KZT'>KZT</option>\r\n            <option value='MXN'>MXN</option>\r\n            <option value='MYR'>MYR</option>\r\n            <option value='NOK'>NOK</option>\r\n            <option value='NZD'>NZD</option>\r\n            <option value='PAB'>PAB</option>\r\n            <option value='PEN'>PEN</option>\r\n            <option value='PHP'>PHP</option>\r\n            <option value='PKR'>PKR</option>\r\n            <option value='PLN'>PLN</option>\r\n            <option value='PYG'>PYG</option>\r\n            <option value='RON'>RON</option>\r\n            <option value='RUB'>RUB</option>\r\n            <option value='SAR'>SAR</option>\r\n            <option value='SEK'>SEK</option>\r\n            <option value='SGD'>SGD</option>\r\n            <option value='THB'>THB</option>\r\n            <option value='TRY'>TRY</option>\r\n            <option value='TWD'>TWD</option>\r\n            <option value='UAH'>UAH</option>\r\n            <option value='USD'>USD</option>\r\n            <option value='UYU'>UYU</option>\r\n            <option value='VND'>VND</option>\r\n            <option value='ZAR'>ZAR</option>\r\n          </Select>\r\n          <Input\r\n            type='number'\r\n            value={targetCurrencyAmount}\r\n            onChange={handleTargetInputChange}\r\n            placeholder='0'\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  place-items: center;\r\n  margin: 2rem auto 0;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 0 0 2rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  margin: 0 1rem 0 0;\r\n  padding: 0.5rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    border: 1px solid #888;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex-basis: 60%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  text-align: right;\r\n  transition: border 0.3s ease;\r\n\r\n  &:focus {\r\n    border: 1px solid #888;\r\n  }\r\n`;\r\n\r\nconst RateInfo = styled(Paragraph)`\r\n  margin: 0;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>About this project</Title>\r\n      <Paragraph>\r\n        This website aims to group few small API-related projects into one. My goal was to create\r\n        one large project which includes many API services instead of creating a small project for\r\n        each API service I found interesting. Using the sidebar you can choose between multiple\r\n        API-based services. 🔥\r\n      </Paragraph>\r\n      <Paragraph>Available options include:</Paragraph>\r\n      <List>\r\n        <li>Quotes for daily inspiration 🧠</li>\r\n        <li>Current weather 🌥️</li>\r\n        <li>Exchange rates 💵</li>\r\n        <li>Song lyrics 🎵</li>\r\n        <li>Meal Finder 🍖</li>\r\n      </List>\r\n      <Subtitle>Enjoy! 😃</Subtitle>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst List = styled.ul`\r\n  margin: 0 0 2rem;\r\n  padding: 0 0 0 3rem;\r\n  list-style-type: disc;\r\n\r\n  & li {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 1.5rem;\r\n\r\n    @media (min-width: 360px) {\r\n      font-size: 1.6rem;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 1.5rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <LoadingAnimation>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </LoadingAnimation>\r\n  );\r\n}\r\n\r\nconst bounce = keyframes`\r\n  0%, 100% {\r\n    transform: translateY(0);\r\n  }\r\n\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n\r\nconst LoadingAnimation = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 3rem auto;\r\n\r\n  & > span {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    margin: 0 0.3rem;\r\n    background-color: var(--dark-blue);\r\n    animation: ${bounce} 0.5s linear infinite;\r\n\r\n    &:nth-of-type(2) {\r\n      animation-delay: 0.1s;\r\n    }\r\n\r\n    &:nth-of-type(3) {\r\n      animation-delay: 0.2s;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nexport default function SearchForm({ handleChange, handleSubmit, term }) {\r\n  useEffect(() => {\r\n    document.querySelector('input').focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <SearchInput\r\n        type='text'\r\n        value={term}\r\n        onChange={handleChange}\r\n        placeholder='Enter artist or song name...'\r\n      />\r\n      <SearchButton>Search</SearchButton>\r\n    </Form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto 1rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 auto 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto 3rem;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 1rem 2rem;\r\n  border: none;\r\n  border-radius: 50px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 2px;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 50px;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LyricsContext } from '../../LyricsContext';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nexport default function Item({ artist, cover, preview, title }) {\r\n  const { setSongInfo } = useContext(LyricsContext);\r\n  const history = useHistory();\r\n  const location = {\r\n    pathname: '/lyrics-app/lyrics-panel',\r\n  };\r\n\r\n  function handleGetLyricsClick() {\r\n    history.push(location);\r\n    const songInfo = {\r\n      artist,\r\n      cover,\r\n      preview,\r\n      title,\r\n    };\r\n    setSongInfo(songInfo);\r\n  }\r\n\r\n  return (\r\n    <StyledItem>\r\n      <span>\r\n        {artist} - {title}\r\n      </span>\r\n      <StyledButton onClick={handleGetLyricsClick}>Get Lyrics</StyledButton>\r\n    </StyledItem>\r\n  );\r\n}\r\n\r\nItem.propTypes = {\r\n  artist: PropTypes.string.isRequired,\r\n  cover: PropTypes.string.isRequired,\r\n  preview: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  border-bottom: 1px solid var(--dark-blue);\r\n  font-size: 1.5rem;\r\n\r\n  & > span {\r\n    flex-basis: 60%;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0.5rem 1.5rem;\r\n  border-radius: 15px;\r\n  font-size: 1.2rem;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { LyricsContext } from '../LyricsContext';\r\n\r\nimport { List } from 'styles/MyStyledComponents';\r\n\r\nimport Item from './Item/Item';\r\n\r\nexport default function SongList() {\r\n  const { response } = useContext(LyricsContext);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {response.data.map(song => (\r\n          <Item\r\n            key={song.id}\r\n            artist={song.artist.name}\r\n            title={song.title}\r\n            cover={song.album.cover_medium}\r\n            preview={song.preview}\r\n          />\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { baseURL, LyricsContext } from '../LyricsContext';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function LyricsPanel() {\r\n  const [lyrics, setLyrics] = useState('');\r\n  const { setShouldShowLoader, songInfo } = useContext(LyricsContext);\r\n\r\n  useEffect(() => {\r\n    setShouldShowLoader(true);\r\n    getLyrics();\r\n  }, []);\r\n\r\n  async function getLyrics() {\r\n    const { artist, title } = songInfo;\r\n    const res = await fetch(`${baseURL}/v1/${artist}/${title}`);\r\n    const data = await res.json();\r\n    setLyrics(data.lyrics);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  function renderLyricsPanel() {\r\n    const { artist, cover, preview, title } = songInfo;\r\n\r\n    return (\r\n      <>\r\n        <SongInfoContainer>\r\n          <CoverContainer>\r\n            <img src={cover} alt='album cover' />\r\n          </CoverContainer>\r\n          <SongInfo>\r\n            <h2>{title}</h2>\r\n            <h3>{artist}</h3>\r\n            <SongPreviewButton as='a' href={preview} target='_blank' rel='noreferrer'>\r\n              <FontAwesomeIcon icon={faPlayCircle} /> Song Preview\r\n            </SongPreviewButton>\r\n          </SongInfo>\r\n        </SongInfoContainer>\r\n        <SongLyrics>{lyrics}</SongLyrics>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{lyrics && renderLyricsPanel()}</>;\r\n}\r\n\r\nconst SongInfoContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 0 3rem;\r\n`;\r\n\r\nconst CoverContainer = styled.section`\r\n  & img {\r\n    width: 200px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 250px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SongInfo = styled.section`\r\n  flex-grow: 1;\r\n  padding: 1rem 2rem;\r\n  text-align: center;\r\n\r\n  & h2 {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 2.4rem;\r\n  }\r\n\r\n  & h3 {\r\n    margin: 0 0 1.5rem;\r\n    font-size: 1.8rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst SongPreviewButton = styled(Button)`\r\n  display: inline-block;\r\n  padding: 0.5rem 1.2rem;\r\n  border-radius: 15px;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst SongLyrics = styled.section`\r\n  padding: 0 0 3rem;\r\n  white-space: pre-wrap;\r\n`;\r\n","import React, { useContext, useState } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { baseURL, LyricsContext } from './LyricsContext';\r\n\r\nimport { Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport SearchForm from './SearchForm/SearchForm';\r\nimport SongList from './SongList/SongList';\r\nimport LyricsPanel from './LyricsPanel/LyricsPanel';\r\n\r\nexport default function LyricsSearch() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const { response, setResponse, setShouldShowLoader, shouldShowLoader } = useContext(\r\n    LyricsContext\r\n  );\r\n\r\n  function handleInputChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    if (!searchTerm) return;\r\n\r\n    searchSongs(searchTerm);\r\n    setSearchTerm('');\r\n    setShouldShowLoader(true);\r\n  }\r\n\r\n  async function searchSongs(term) {\r\n    const res = await fetch(`${baseURL}/suggest/${term.trim()}`);\r\n    const data = await res.json();\r\n\r\n    setResponse(data);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Wrapper>\r\n        <Title>Find the lyrics for your favorite song! 🎵</Title>\r\n        <SearchForm\r\n          handleChange={handleInputChange}\r\n          handleSubmit={handleFormSubmit}\r\n          term={searchTerm}\r\n        />\r\n        {shouldShowLoader && <Loader />}\r\n        <Route path='/lyrics-app' exact>\r\n          {response && <SongList />}\r\n        </Route>\r\n        <Route path='/lyrics-app/lyrics-panel' exact>\r\n          <LyricsPanel />\r\n        </Route>\r\n      </Wrapper>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/404.f20cfb66.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport Image404 from 'assets/404.png';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Oops...!</Title>\r\n      <Paragraph>We can't seem to find the page you're looking for...</Paragraph>\r\n      <Button to='/'>\r\n        Go back home <FontAwesomeIcon icon={faHome} />\r\n      </Button>\r\n      <Image src={Image404} alt='Page not found' />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Button = styled(Link)`\r\n  display: inline-block;\r\n  margin: 0 auto 1.5rem;\r\n  padding: 0.5rem 2rem;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background: var(--dark-blue);\r\n  color: var(--light-gray);\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 2rem auto 3rem;\r\n    padding: 1rem 2rem;\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  border-radius: 3px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 3rem auto 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nconst URL = 'https://type.fit/api/quotes';\r\n\r\nexport default function Quotes() {\r\n  const [quoteText, setQuoteText] = useState('');\r\n  const [quoteAuthor, setQuoteAuthor] = useState('');\r\n\r\n  const generateRandomQuote = useCallback(async () => {\r\n    const quotes = await getQuotes();\r\n    const quotesCount = quotes.length;\r\n    const randomIndex = ~~(Math.random() * quotesCount);\r\n    const quote = quotes[randomIndex];\r\n    setQuoteText(`\"${quote.text}\"`);\r\n    setQuoteAuthor(quote.author);\r\n  }, []);\r\n\r\n  const getQuotes = async () => {\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateRandomQuote();\r\n  }, [generateRandomQuote]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Get inspired with our quotes! 🧠</Title>\r\n      <Paragraph>{quoteText}</Paragraph>\r\n      <QuoteAuthor>{quoteAuthor ?? 'Author Unknown'}</QuoteAuthor>\r\n      <GetNewQuoteButton onClick={generateRandomQuote}>Get New Quote</GetNewQuoteButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst QuoteAuthor = styled(Paragraph)`\r\n  font-size: 1.4rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  text-align: right;\r\n`;\r\n\r\nconst GetNewQuoteButton = styled(Button)`\r\n  margin: 2rem 0 0;\r\n  padding: 1rem 2rem;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faBolt,\r\n  faCloud,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faMoon,\r\n  faSnowflake,\r\n  faSun,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst APIKey = 'd8bda41b14ee677c9b19adfc045f9b2b';\r\nconst mPerSecToKmPerHrRatio = 3.6;\r\n\r\nexport default function Weather() {\r\n  const [city, setCity] = useState('');\r\n  const [hasFoundCity, setHasFoundCity] = useState(true);\r\n  const [weatherData, setWeatherData] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.querySelector('input').focus();\r\n  }, []);\r\n\r\n  const handleInputChange = e => setCity(e.target.value);\r\n  const handleButtonClick = e => {\r\n    e.preventDefault();\r\n    if (!city) return;\r\n\r\n    setShouldShowLoader(true);\r\n    getWeatherForGivenCity(city);\r\n    setCity('');\r\n  };\r\n\r\n  const getWeatherForGivenCity = city => {\r\n    const cors_api_host = 'https://cors-anywhere.herokuapp.com/';\r\n    const URL = `${cors_api_host}http://api.openweathermap.org/data/2.5/weather?q=${city.trim()}&appid=${APIKey}&units=metric`;\r\n    fetch(URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.cod !== 200) {\r\n          setHasFoundCity(false);\r\n          throw new Error('City not found...');\r\n        }\r\n\r\n        setHasFoundCity(true);\r\n        extractWeatherData(data);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const extractWeatherData = data => {\r\n    const weatherData = {\r\n      cityName: data.name,\r\n      temperature: Math.round(data.main.temp),\r\n      feelsLike: Math.round(data.main.feels_like),\r\n      humidity: data.main.humidity,\r\n      pressure: data.main.pressure,\r\n      wind: Math.round(data.wind.speed * mPerSecToKmPerHrRatio),\r\n      condition: data.weather[0].main,\r\n      conditionDescription: data.weather[0].description,\r\n      sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString(),\r\n      sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString(),\r\n      hasSunSet: new Date().getTime() >= data.sys.sunset * 1000 ? true : false,\r\n    };\r\n\r\n    setWeatherData(weatherData);\r\n    setShouldShowLoader(false);\r\n  };\r\n\r\n  const renderWeatherData = () => {\r\n    const {\r\n      cityName,\r\n      condition,\r\n      conditionDescription,\r\n      feelsLike,\r\n      hasSunSet,\r\n      humidity,\r\n      pressure,\r\n      sunrise,\r\n      sunset,\r\n      temperature,\r\n      wind,\r\n    } = weatherData;\r\n\r\n    const conditionDescriptionFormatted =\r\n      conditionDescription.slice(0, 1).toUpperCase() + conditionDescription.slice(1);\r\n\r\n    return (\r\n      <section>\r\n        <WeatherMainInfo>\r\n          <p className='city'>{cityName}</p>\r\n          <p className='temperature'>{temperature}&deg;</p>\r\n          <small className='feels_like'>Feels like {feelsLike}&deg;</small>\r\n          <p className='condition'>\r\n            {conditionDescriptionFormatted} {getIcon(condition, hasSunSet)}\r\n          </p>\r\n        </WeatherMainInfo>\r\n        <WeatherInfoList>\r\n          <li>\r\n            Wind <span>{wind} km/h</span>\r\n          </li>\r\n          <li>\r\n            Humidity <span>{humidity}%</span>\r\n          </li>\r\n          <li>\r\n            Pressure <span>{pressure} hPa</span>\r\n          </li>\r\n          <li>\r\n            Sunrise <span>{sunrise}</span>\r\n          </li>\r\n          <li>\r\n            Sunset <span>{sunset}</span>\r\n          </li>\r\n        </WeatherInfoList>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  const getIcon = (condition, hasSunSet) => {\r\n    if (condition === 'Clear') {\r\n      if (hasSunSet) return <FontAwesomeIcon icon={faMoon} />;\r\n      return <FontAwesomeIcon icon={faSun} />;\r\n    }\r\n    if (condition === 'Clouds') return <FontAwesomeIcon icon={faCloud} />;\r\n    if (condition === 'Rain') return <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n    if (condition === 'Snow') return <FontAwesomeIcon icon={faSnowflake} />;\r\n    if (condition === 'Drizzle') return <FontAwesomeIcon icon={faCloudRain} />;\r\n    if (condition === 'Thunderstorm') return <FontAwesomeIcon icon={faBolt} />;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Get current weather for a given location 🌤️</Title>\r\n      <Form>\r\n        <CityInput\r\n          type='text'\r\n          id='city'\r\n          value={city}\r\n          onChange={handleInputChange}\r\n          placeholder='Search city'\r\n          autoComplete='off'\r\n        />\r\n        <SearchButton onClick={handleButtonClick}>Search</SearchButton>\r\n      </Form>\r\n      {shouldShowLoader && <Loader />}\r\n      {weatherData && renderWeatherData()}\r\n      {!hasFoundCity && <Paragraph>City not found...Please try again.</Paragraph>}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 0 1rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 3rem;\r\n  }\r\n`;\r\n\r\nconst CityInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px 0 0 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n\r\n  &:focus {\r\n    border: 1px solid var(--dark-blue);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n  padding: 0.5rem 2rem;\r\n  border: 1px solid var(--dark-blue);\r\n  border-radius: 0 3px 3px 0;\r\n`;\r\n\r\nconst WeatherMainInfo = styled.section`\r\n  margin: 0 auto 1rem;\r\n  text-align: center;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n\r\n  & p.city {\r\n    font-size: 1.8rem;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  & p.temperature {\r\n    font-size: 3.4rem;\r\n  }\r\n\r\n  & small.feels_like {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 auto 2rem;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    & p.city {\r\n      font-size: 2.2rem;\r\n    }\r\n\r\n    & p.temperature {\r\n      font-size: 4rem;\r\n    }\r\n\r\n    & small.feels_like {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeatherInfoList = styled.ul`\r\n  list-style-type: none;\r\n\r\n  & li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    border-bottom: 1px solid #888;\r\n    font-size: 1.5rem;\r\n\r\n    @media (min-width: 360px) {\r\n      font-size: 1.6rem;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n\r\n  & li:first-child {\r\n    border-top: 1px solid #888;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRandom, faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Form({ handleChange, handleRandomClick, handleSubmit, term }) {\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <StyledInput\r\n        type='text'\r\n        placeholder='Search for meals...'\r\n        value={term}\r\n        onChange={handleChange}\r\n      />\r\n      <SearchIcon>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </SearchIcon>\r\n      <RandomIcon onClick={handleRandomClick}>\r\n        <FontAwesomeIcon icon={faRandom} />\r\n      </RandomIcon>\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleRandomClick: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto 2rem;\r\n  text-align: center;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 5px 0 0 5px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n  caret-color: var(--dark-blue);\r\n\r\n  &:focus {\r\n    border: 1px solid #999;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Button)`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0 5px 5px 0;\r\n`;\r\n\r\nconst RandomIcon = styled(Button)`\r\n  position: relative;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0 0 0 1rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nexport default function MealsPanel({ foundMeals, getMealDetails, term }) {\r\n  const meals = foundMeals.map(meal => (\r\n    <MealContainer key={meal.idMeal} onClick={() => getMealDetails(meal.idMeal)}>\r\n      <img src={meal.strMealThumb} alt={meal.strMeal} />\r\n      <h2>{meal.strMeal}</h2>\r\n    </MealContainer>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>{meals}</Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nMealsPanel.propTypes = {\r\n  foundMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleMealClick: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 1rem;\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nconst MealContainer = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 14rem;\r\n  border: 3px solid var(--light-gray);\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  & img {\r\n    width: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  & h2 {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: grid;\r\n    place-items: center;\r\n    opacity: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    color: var(--light-gray);\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n\r\n  &:hover img {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:hover h2 {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph } from 'styles/MyStyledComponents';\r\n\r\nexport default function SingleMealPanel({ mealDetails }) {\r\n  function getIngredients() {\r\n    let ingredients = [];\r\n\r\n    for (let i = 1; i <= 20; i++) {\r\n      if (!mealDetails[`strIngredient${i}`]) break;\r\n      ingredients.push(`${mealDetails[`strIngredient${i}`]} - ${mealDetails[`strMeasure${i}`]}`);\r\n    }\r\n\r\n    const ingredientItems = ingredients.map(item => (\r\n      <li key={item}>{item.slice(0, 1).toUpperCase() + item.slice(1)}</li>\r\n    ));\r\n\r\n    return ingredientItems;\r\n  }\r\n\r\n  function getYouTubeVideo() {\r\n    const youTubeLink = mealDetails.strYoutube.replace('watch?v=', 'embed/');\r\n    return (\r\n      <iframe\r\n        src={youTubeLink}\r\n        title={mealDetails.strMeal}\r\n        frameBorder='0'\r\n        allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n        allowFullScreen\r\n      ></iframe>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SingleMealContainer>\r\n      <h2>{mealDetails.strMeal}</h2>\r\n      <img src={mealDetails.strMealThumb} alt={mealDetails.strMeal} />\r\n      <Text>Category: {mealDetails.strCategory}</Text>\r\n      <Text>Origin: {mealDetails.strArea}</Text>\r\n      <h3>Ingredients:</h3>\r\n      <ul>{getIngredients()}</ul>\r\n      <h3>Instructions:</h3>\r\n      <Instructions>{mealDetails.strInstructions}</Instructions>\r\n      <FrameContainer>{getYouTubeVideo()}</FrameContainer>\r\n    </SingleMealContainer>\r\n  );\r\n}\r\n\r\nSingleMealPanel.propTypes = {\r\n  mealDetails: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SingleMealContainer = styled.section`\r\n  & h2 {\r\n    margin: 0 0 1rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n  }\r\n\r\n  & img {\r\n    display: block;\r\n    width: 20rem;\r\n    margin: 0 auto 1rem;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  & h3 {\r\n    margin: 2rem 0 1rem;\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  & ul {\r\n    padding: 0 0 0 2rem;\r\n    list-style-type: disc;\r\n  }\r\n\r\n  & li {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Paragraph)`\r\n  text-align: center;\r\n`;\r\n\r\nconst Instructions = styled(Paragraph)`\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst FrameContainer = styled.div`\r\n  margin: 2rem auto;\r\n\r\n  & iframe {\r\n    width: 100%;\r\n    min-height: 180px;\r\n\r\n    @media (min-width: 768px) {\r\n      height: 281px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport { Title, Wrapper } from 'styles/MyStyledComponents';\r\nimport Form from './Form/Form';\r\nimport MealsPanel from './MealsPanel/MealsPanel';\r\nimport SingleMealPanel from './SingleMealPanel/SingleMealPanel';\r\n\r\nexport default function MealFinder() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [foundMeals, setFoundMeals] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n  const [mealDetails, setMealDetails] = useState('');\r\n  const [shouldShowError, setShouldShowError] = useState(false);\r\n\r\n  function handleInputChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleSearchFormSubmit(e) {\r\n    e.preventDefault();\r\n    if (!searchTerm) return;\r\n\r\n    setShouldShowLoader(true);\r\n    searchMeal(searchTerm);\r\n    setSearchTerm('');\r\n    setMealDetails('');\r\n    setShouldShowError(false);\r\n  }\r\n\r\n  async function searchMeal(term) {\r\n    const URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${term.trim()}`;\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setFoundMeals(data.meals);\r\n    setShouldShowLoader(false);\r\n    if (!data.meals) {\r\n      setShouldShowError(true);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleRandomClick(e) {\r\n    e.preventDefault();\r\n    getRandomMeal();\r\n    setShouldShowLoader(true);\r\n  }\r\n\r\n  async function getRandomMeal() {\r\n    setShouldShowError(false);\r\n    const URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setMealDetails(data.meals[0]);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  async function getMealDetails(mealID) {\r\n    setShouldShowLoader(true);\r\n    const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealID}`;\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setMealDetails(data.meals[0]);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Find recipes for your favorite meals! 😋</Title>\r\n      <Form\r\n        term={searchTerm}\r\n        handleChange={handleInputChange}\r\n        handleRandomClick={handleRandomClick}\r\n        handleSubmit={handleSearchFormSubmit}\r\n      />\r\n      {shouldShowLoader && <Loader />}\r\n      {shouldShowError && <p>No results. Try a different keyword.</p>}\r\n      {foundMeals && !mealDetails && (\r\n        <MealsPanel foundMeals={foundMeals} getMealDetails={getMealDetails} term={searchTerm} />\r\n      )}\r\n      {mealDetails && <SingleMealPanel mealDetails={mealDetails} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from 'context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Navigation() {\r\n  const { closeSidebar, sidebarRef } = useContext(AppContext);\r\n\r\n  return (\r\n    <Sidebar ref={sidebarRef}>\r\n      <CloseSidebarIcon onClick={closeSidebar}>\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </CloseSidebarIcon>\r\n      <List>\r\n        <ListItem>\r\n          <StyledNavLink to='/' exact activeClassName='active-link' onClick={closeSidebar}>\r\n            Home\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/quotes' activeClassName='active-link' onClick={closeSidebar}>\r\n            Quotes\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/weather' activeClassName='active-link' onClick={closeSidebar}>\r\n            Weather\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/exchange-rates' activeClassName='active-link' onClick={closeSidebar}>\r\n            Exchange Rates\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink\r\n            to='/lyrics-app'\r\n            exact\r\n            activeClassName='active-link'\r\n            onClick={closeSidebar}\r\n          >\r\n            Song Lyrics\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink\r\n            to='/meal-finder'\r\n            exact\r\n            activeClassName='active-link'\r\n            onClick={closeSidebar}\r\n          >\r\n            Meal Finder\r\n          </StyledNavLink>\r\n        </ListItem>\r\n      </List>\r\n    </Sidebar>\r\n  );\r\n}\r\n\r\nconst Sidebar = styled.nav`\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 100vh;\r\n  background-color: var(--light-blue);\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n\r\n  @media (min-width: 360px) {\r\n    width: 250px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst CloseSidebarIcon = styled.button`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  border: none;\r\n  outline: none;\r\n  background: transparent;\r\n  color: var(--light-gray);\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 2.4rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    top: 2rem;\r\n    right: 2rem;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    right: 4rem;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  margin: 0 0 2rem;\r\n  text-align: center;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  position: relative;\r\n  color: var(--light-gray);\r\n  font-size: 1.5rem;\r\n  text-decoration: none;\r\n\r\n  &.active-link {\r\n    font-weight: bold;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 2px 0 0;\r\n    border-bottom: 1px solid var(--light-gray);\r\n    transform: scale(0, 1);\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  &:hover::after,\r\n  &:focus::after {\r\n    transform: scale(1, 1);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from 'context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation/Navigation';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithubAlt, faLinkedinIn, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default function Header() {\r\n  const { openSidebar } = useContext(AppContext);\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Logo to='/'>API Hub</Logo>\r\n      <IconWrapper>\r\n        <Icon as='a' href='https://github.com/JalalMallah' target='_blank'>\r\n          <FontAwesomeIcon icon={faGithubAlt} />\r\n        </Icon>\r\n        <Icon as='a' href='https://www.linkedin.com/in/jalal-mallah' target='_blank'>\r\n          <FontAwesomeIcon icon={faLinkedinIn} />\r\n        </Icon>\r\n        <Icon as='a' href='https://twitter.com/jalal_mallah_' target='_blank'>\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </Icon>\r\n        <OpenSidebarIcon onClick={openSidebar}>\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </OpenSidebarIcon>\r\n      </IconWrapper>\r\n      <Navigation />\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  background-color: var(--dark-blue);\r\n  color: var(--light-gray);\r\n\r\n  @media (min-height: 700px) {\r\n    position: sticky;\r\n    z-index: 2;\r\n    top: 0;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 2rem 4rem;\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  margin: 0;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  color: var(--light-gray);\r\n  font-size: 1.8rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n  transition: color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--custom-yellow);\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst OpenSidebarIcon = styled.button`\r\n  margin: 0 0 0 2rem;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: var(--light-gray);\r\n  font-size: 2.2rem;\r\n  transition: color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--custom-yellow);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 0 2.5rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 0 4rem;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(OpenSidebarIcon)`\r\n  margin: 0 0 0 1.2rem;\r\n  font-size: 1.4rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 0 1.5rem;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 0 2rem;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LyricsProvider from './views/LyricsSearch/LyricsContext';\n\nimport ExchangeRates from 'components/views/ExchangeRates/ExchangeRates';\nimport Home from 'components/views/Home/Home';\nimport LyricsSearch from 'components/views/LyricsSearch/LyricsSearch';\nimport PageNotFound from 'components/views/PageNotFound/PageNotFound';\nimport Quotes from 'components/views/Quotes/Quotes';\nimport Weather from 'components/views/Weather/Weather';\nimport MealFinder from 'components/views/MealFinder/MealFinder';\n\nimport Header from 'components/Header/Header';\n\nconst App = () => {\n  return (\n    <LyricsProvider>\n      <Header />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/quotes' component={Quotes} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/exchange-rates' component={ExchangeRates} />\n        <Route path='/lyrics-app' exact component={LyricsSearch} />\n        <Route path='/meal-finder' exact component={MealFinder} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </LyricsProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppProvider from 'context';\n\nimport GlobalStyle from 'styles/GlobalStyle';\n\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}