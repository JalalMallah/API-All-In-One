{"version":3,"sources":["context.js","styles/GlobalStyle.js","components/views/LyricsSearch/LyricsContext.js","styles/MyStyledComponents.js","components/views/ExchangeRates/ExchangeRates.js","components/views/Home/Home.js","components/Loader/Loader.js","components/views/LyricsSearch/SearchForm/SearchForm.js","components/views/LyricsSearch/SongList/Item/Item.js","components/views/LyricsSearch/SongList/SongList.js","components/views/LyricsSearch/LyricsPanel/LyricsPanel.js","components/views/LyricsSearch/LyricsSearch.js","assets/404.png","components/views/PageNotFound/PageNotFound.js","components/views/Quotes/Quotes.js","components/views/Weather/RequestPanel/RequestPanel.js","components/views/Weather/Weather.js","components/views/MealFinder/Form/Form.js","components/views/MealFinder/MealsPanel/MealsPanel.js","components/views/MealFinder/SingleMealPanel/SingleMealPanel.js","components/views/MealFinder/MealFinder.js","components/Header/Navigation/Navigation.js","components/Header/Header.js","components/App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","sidebarRef","useRef","contextValue","openSidebar","current","style","setProperty","closeSidebar","Provider","value","GlobalStyle","createGlobalStyle","LyricsContext","baseURL","LyricsProvider","useState","response","setResponse","songInfo","setSongInfo","shouldShowLoader","setShouldShowLoader","lyrics","setLyrics","shouldRenderSongList","setShouldRenderSongList","contextValues","shouldRenderLyricsPanel","setShouldRenderLyricsPanel","Button","styled","button","List","ul","Paragraph","p","Title","h1","Wrapper","main","ExchangeRates","selectedBaseCurrency","setSelectedBaseCurrency","selectedTargetCurrency","setSelectedTargetCurrency","conversionRate","setConversionRate","baseCurrencyAmount","setBaseCurrencyAmount","targetCurrencyAmount","setTargetCurrencyAmount","useEffect","calculateRate","fetch","then","res","json","data","result","conversion_rates","calculatedAmountInTargetCurrency","toFixed","catch","err","console","error","Container","Row","Select","onChange","e","target","Input","type","valueAsNumber","placeholder","onClick","RateInfo","section","div","select","input","Home","Subtitle","h4","Loader","LoadingAnimation","bounce","keyframes","SearchForm","handleChange","handleSubmit","term","document","querySelector","focus","Form","onSubmit","SearchInput","SearchButton","form","Item","artist","cover","preview","title","useContext","a","log","StyledItem","StyledButton","getLyrics","li","SongList","length","map","song","name","album","cover_medium","id","LyricsPanel","SongInfoContainer","CoverContainer","src","alt","SongInfo","SongPreviewButton","as","href","rel","icon","faPlayCircle","SongLyrics","LyricsSearch","searchTerm","setSearchTerm","trim","basename","process","preventDefault","searchSongs","PageNotFound","to","faHome","Image","Image404","Link","img","Quotes","quoteText","setQuoteText","quoteAuthor","setQuoteAuthor","generateRandomQuote","useCallback","getQuotes","quotes","quotesCount","randomIndex","Math","random","quote","text","author","QuoteAuthor","GetNewQuoteButton","RequestPanel","setShouldShowRequestPanel","Weather","city","setCity","shouldShowErrorMessage","setShouldShowErrorMessage","weatherData","setWeatherData","shouldShowRequestPanel","getWeatherForGivenCity","URL","cod","Error","extractWeatherData","cityName","temperature","round","temp","feelsLike","feels_like","humidity","pressure","wind","speed","condition","weather","conditionDescription","description","sunrise","Date","sys","toLocaleTimeString","sunset","hasSunSet","getTime","getIcon","faMoon","faSun","faCloud","faCloudShowersHeavy","faSnowflake","faCloudRain","faBolt","CityInput","autoComplete","conditionDescriptionFormatted","slice","toUpperCase","WeatherMainInfo","className","WeatherInfoList","renderWeatherData","handleRandomClick","StyledForm","StyledInput","SearchIcon","faSearch","RandomIcon","faRandom","MealsPanel","foundMeals","getMealDetails","meals","meal","MealContainer","idMeal","strMealThumb","strMeal","SingleMealPanel","mealDetails","SingleMealContainer","Text","strCategory","strArea","ingredients","i","push","item","getIngredients","Instructions","strInstructions","FrameContainer","youTubeLink","strYoutube","replace","frameBorder","allow","allowFullScreen","getYouTubeVideo","MealFinder","setFoundMeals","setMealDetails","shouldShowError","setShouldShowError","mealID","getRandomMeal","searchMeal","Navigation","Sidebar","ref","CloseSidebarIcon","faTimes","ListItem","StyledNavLink","exact","activeClassName","nav","NavLink","Header","HeaderWrapper","Logo","IconWrapper","Icon","faGithubAlt","faLinkedinIn","faTwitter","OpenSidebarIcon","faBars","header","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7074859.chunk.js","sourcesContent":["import { createContext, useRef } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const sidebarRef = useRef();\r\n  const openSidebar = () => sidebarRef.current.style.setProperty('transform', 'translateX(0)');\r\n  const closeSidebar = () => sidebarRef.current.style.setProperty('transform', 'translateX(100%)');\r\n\r\n  const contextValue = {\r\n    sidebarRef,\r\n    openSidebar,\r\n    closeSidebar,\r\n  };\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppProvider;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  :root {\r\n    --body-background: #dcdde1;\r\n    --custom-yellow: #fbc531;\r\n    --dark-blue: #192a56;\r\n    --light-blue: #273c75;\r\n    --light-gray: #f5f6fa;\r\n    --main-font: 'Red Hat Text', sans-serif;\r\n    font-family: var(--main-font);\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    background-color: var(--body-background);\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const LyricsContext = createContext();\r\n\r\nexport const baseURL = 'https://api.lyrics.ovh';\r\n\r\nexport default function LyricsProvider({ children }) {\r\n  const [response, setResponse] = useState('');\r\n  const [songInfo, setSongInfo] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n  const [lyrics, setLyrics] = useState('');\r\n  const [shouldRenderSongList, setShouldRenderSongList] = useState(false);\r\n  const [shouldRenderLyricsPanel, setShouldRenderLyricsPanel] = useState(false);\r\n\r\n  const contextValues = {\r\n    lyrics,\r\n    setLyrics,\r\n    response,\r\n    setResponse,\r\n    songInfo,\r\n    setSongInfo,\r\n    shouldShowLoader,\r\n    setShouldShowLoader,\r\n    shouldRenderSongList,\r\n    setShouldRenderSongList,\r\n    shouldRenderLyricsPanel,\r\n    setShouldRenderLyricsPanel,\r\n  };\r\n\r\n  return <LyricsContext.Provider value={contextValues}>{children}</LyricsContext.Provider>;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  padding: 0.8rem 2rem;\r\n  border: none;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: var(--dark-blue);\r\n  color: var(--light-gray);\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  transition: background-color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    transform: scale(0.98);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--light-blue);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin: 0 0 1rem;\r\n  font-size: 1.5rem;\r\n  line-height: 1.4;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin: 0 0 1rem;\r\n  font-size: 1.8rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 1.5rem;\r\n    font-size: 2.4rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.main`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 1rem 1.5rem 3rem;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 360px) {\r\n    padding: 1.5rem 2rem 3rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 3rem 2rem 3rem;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nconst APIKey = '65ae7a288dd355c89554072f';\r\n\r\nexport default function ExchangeRates() {\r\n  const [selectedBaseCurrency, setSelectedBaseCurrency] = useState('USD');\r\n  const [selectedTargetCurrency, setSelectedTargetCurrency] = useState('EUR');\r\n\r\n  const [conversionRate, setConversionRate] = useState();\r\n\r\n  const [baseCurrencyAmount, setBaseCurrencyAmount] = useState(1);\r\n  const [targetCurrencyAmount, setTargetCurrencyAmount] = useState('');\r\n\r\n  useEffect(() => {\r\n    calculateRate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedBaseCurrency, selectedTargetCurrency, baseCurrencyAmount]);\r\n\r\n  const handleBaseSelectChange = e => setSelectedBaseCurrency(e.target.value);\r\n  const handleTargetSelectChange = e => setSelectedTargetCurrency(e.target.value);\r\n\r\n  const handleBaseInputChange = e => setBaseCurrencyAmount(e.target.valueAsNumber);\r\n  const handleTargetInputChange = e => setTargetCurrencyAmount(e.target.valueAsNumber);\r\n\r\n  const calculateRate = () => {\r\n    const baseURL = `https://v6.exchangerate-api.com/v6/${APIKey}/latest/${selectedBaseCurrency}`;\r\n\r\n    fetch(baseURL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.result !== 'success') return;\r\n\r\n        const conversionRate = data.conversion_rates[selectedTargetCurrency];\r\n        const calculatedAmountInTargetCurrency = +(baseCurrencyAmount * conversionRate).toFixed(2);\r\n        setConversionRate(conversionRate);\r\n        setTargetCurrencyAmount(calculatedAmountInTargetCurrency);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const showRateInfo = () =>\r\n    `1 ${selectedBaseCurrency} = ${conversionRate} ${selectedTargetCurrency}`;\r\n\r\n  const swapCurrencies = () => {\r\n    setSelectedBaseCurrency(selectedTargetCurrency);\r\n    setSelectedTargetCurrency(selectedBaseCurrency);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Exchange Rate Calculator 💰</Title>\r\n      <Paragraph>Choose the currency and provide the amout to get the exchange rate!</Paragraph>\r\n      <Container>\r\n        <Row>\r\n          <Select value={selectedBaseCurrency} onChange={handleBaseSelectChange}>\r\n            <option value='AED'>AED</option>\r\n            <option value='ARS'>ARS</option>\r\n            <option value='AUD'>AUD</option>\r\n            <option value='BGN'>BGN</option>\r\n            <option value='BRL'>BRL</option>\r\n            <option value='BSD'>BSD</option>\r\n            <option value='CAD'>CAD</option>\r\n            <option value='CHF'>CHF</option>\r\n            <option value='CLP'>CLP</option>\r\n            <option value='CNY'>CNY</option>\r\n            <option value='COP'>COP</option>\r\n            <option value='CZK'>CZK</option>\r\n            <option value='DKK'>DKK</option>\r\n            <option value='DOP'>DOP</option>\r\n            <option value='EGP'>EGP</option>\r\n            <option value='EUR'>EUR</option>\r\n            <option value='FJD'>FJD</option>\r\n            <option value='GBP'>GBP</option>\r\n            <option value='GTQ'>GTQ</option>\r\n            <option value='HKD'>HKD</option>\r\n            <option value='HRK'>HRK</option>\r\n            <option value='HUF'>HUF</option>\r\n            <option value='IDR'>IDR</option>\r\n            <option value='ILS'>ILS</option>\r\n            <option value='INR'>INR</option>\r\n            <option value='ISK'>ISK</option>\r\n            <option value='JPY'>JPY</option>\r\n            <option value='KRW'>KRW</option>\r\n            <option value='KZT'>KZT</option>\r\n            <option value='MXN'>MXN</option>\r\n            <option value='MYR'>MYR</option>\r\n            <option value='NOK'>NOK</option>\r\n            <option value='NZD'>NZD</option>\r\n            <option value='PAB'>PAB</option>\r\n            <option value='PEN'>PEN</option>\r\n            <option value='PHP'>PHP</option>\r\n            <option value='PKR'>PKR</option>\r\n            <option value='PLN'>PLN</option>\r\n            <option value='PYG'>PYG</option>\r\n            <option value='RON'>RON</option>\r\n            <option value='RUB'>RUB</option>\r\n            <option value='SAR'>SAR</option>\r\n            <option value='SEK'>SEK</option>\r\n            <option value='SGD'>SGD</option>\r\n            <option value='THB'>THB</option>\r\n            <option value='TRY'>TRY</option>\r\n            <option value='TWD'>TWD</option>\r\n            <option value='UAH'>UAH</option>\r\n            <option value='USD'>USD</option>\r\n            <option value='UYU'>UYU</option>\r\n            <option value='VND'>VND</option>\r\n            <option value='ZAR'>ZAR</option>\r\n          </Select>\r\n          <Input\r\n            type='number'\r\n            value={baseCurrencyAmount}\r\n            onChange={handleBaseInputChange}\r\n            placeholder='0'\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Button onClick={swapCurrencies}>Swap</Button>\r\n          <RateInfo>{conversionRate && showRateInfo()}</RateInfo>\r\n        </Row>\r\n        <Row>\r\n          <Select value={selectedTargetCurrency} onChange={handleTargetSelectChange}>\r\n            <option value='AED'>AED</option>\r\n            <option value='ARS'>ARS</option>\r\n            <option value='AUD'>AUD</option>\r\n            <option value='BGN'>BGN</option>\r\n            <option value='BRL'>BRL</option>\r\n            <option value='BSD'>BSD</option>\r\n            <option value='CAD'>CAD</option>\r\n            <option value='CHF'>CHF</option>\r\n            <option value='CLP'>CLP</option>\r\n            <option value='CNY'>CNY</option>\r\n            <option value='COP'>COP</option>\r\n            <option value='CZK'>CZK</option>\r\n            <option value='DKK'>DKK</option>\r\n            <option value='DOP'>DOP</option>\r\n            <option value='EGP'>EGP</option>\r\n            <option value='EUR'>EUR</option>\r\n            <option value='FJD'>FJD</option>\r\n            <option value='GBP'>GBP</option>\r\n            <option value='GTQ'>GTQ</option>\r\n            <option value='HKD'>HKD</option>\r\n            <option value='HRK'>HRK</option>\r\n            <option value='HUF'>HUF</option>\r\n            <option value='IDR'>IDR</option>\r\n            <option value='ILS'>ILS</option>\r\n            <option value='INR'>INR</option>\r\n            <option value='ISK'>ISK</option>\r\n            <option value='JPY'>JPY</option>\r\n            <option value='KRW'>KRW</option>\r\n            <option value='KZT'>KZT</option>\r\n            <option value='MXN'>MXN</option>\r\n            <option value='MYR'>MYR</option>\r\n            <option value='NOK'>NOK</option>\r\n            <option value='NZD'>NZD</option>\r\n            <option value='PAB'>PAB</option>\r\n            <option value='PEN'>PEN</option>\r\n            <option value='PHP'>PHP</option>\r\n            <option value='PKR'>PKR</option>\r\n            <option value='PLN'>PLN</option>\r\n            <option value='PYG'>PYG</option>\r\n            <option value='RON'>RON</option>\r\n            <option value='RUB'>RUB</option>\r\n            <option value='SAR'>SAR</option>\r\n            <option value='SEK'>SEK</option>\r\n            <option value='SGD'>SGD</option>\r\n            <option value='THB'>THB</option>\r\n            <option value='TRY'>TRY</option>\r\n            <option value='TWD'>TWD</option>\r\n            <option value='UAH'>UAH</option>\r\n            <option value='USD'>USD</option>\r\n            <option value='UYU'>UYU</option>\r\n            <option value='VND'>VND</option>\r\n            <option value='ZAR'>ZAR</option>\r\n          </Select>\r\n          <Input\r\n            type='number'\r\n            value={targetCurrencyAmount}\r\n            onChange={handleTargetInputChange}\r\n            placeholder='0'\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  place-items: center;\r\n  margin: 2rem auto 0;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 0 0 2rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  margin: 0 1rem 0 0;\r\n  padding: 0.5rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    border: 1px solid #888;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex-basis: 60%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  text-align: right;\r\n  transition: border 0.3s ease;\r\n\r\n  &:focus {\r\n    border: 1px solid #888;\r\n  }\r\n`;\r\n\r\nconst RateInfo = styled(Paragraph)`\r\n  margin: 0;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>About this project</Title>\r\n      <Paragraph>\r\n        This website aims to group few small API-related projects into one. My goal was to create\r\n        one large project which includes many API services instead of creating a small project for\r\n        each API service I found interesting. Using the sidebar you can choose between multiple\r\n        API-based services. 🔥\r\n      </Paragraph>\r\n      <Paragraph>Available options include:</Paragraph>\r\n      <List>\r\n        <li>Quotes for daily inspiration 🧠</li>\r\n        <li>Current weather 🌥️</li>\r\n        <li>Exchange rates 💵</li>\r\n        <li>Song lyrics 🎵</li>\r\n        <li>Meal Finder 🍖</li>\r\n      </List>\r\n      <Subtitle>Enjoy! 😃</Subtitle>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst List = styled.ul`\r\n  margin: 0 0 2rem;\r\n  padding: 0 0 0 3rem;\r\n  list-style-type: disc;\r\n\r\n  & li {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 1.5rem;\r\n\r\n    @media (min-width: 360px) {\r\n      font-size: 1.6rem;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 1.5rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <LoadingAnimation>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </LoadingAnimation>\r\n  );\r\n}\r\n\r\nconst bounce = keyframes`\r\n  0%, 100% {\r\n    transform: translateY(0);\r\n  }\r\n\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n\r\nconst LoadingAnimation = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 3rem auto;\r\n\r\n  & > span {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    margin: 0 0.3rem;\r\n    background-color: var(--dark-blue);\r\n    animation: ${bounce} 0.5s linear infinite;\r\n\r\n    &:nth-of-type(2) {\r\n      animation-delay: 0.1s;\r\n    }\r\n\r\n    &:nth-of-type(3) {\r\n      animation-delay: 0.2s;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nexport default function SearchForm({ handleChange, handleSubmit, term }) {\r\n  useEffect(() => {\r\n    document.querySelector('input').focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <SearchInput\r\n        type='text'\r\n        value={term}\r\n        onChange={handleChange}\r\n        placeholder='Enter artist or song name...'\r\n      />\r\n      <SearchButton>Search</SearchButton>\r\n    </Form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto 1rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 auto 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto 3rem;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 1rem 2rem;\r\n  border: none;\r\n  border-radius: 50px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 2px;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 50px;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { baseURL, LyricsContext } from '../../LyricsContext';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nexport default function Item({ artist, cover, preview, title }) {\r\n  const {\r\n    setSongInfo,\r\n    setLyrics,\r\n    setShouldRenderLyricsPanel,\r\n    setShouldRenderSongList,\r\n    setShouldShowLoader,\r\n  } = useContext(LyricsContext);\r\n\r\n  function handleGetLyricsClick() {\r\n    setShouldShowLoader(true);\r\n    const songInfo = {\r\n      artist,\r\n      cover,\r\n      preview,\r\n      title,\r\n    };\r\n    setSongInfo(songInfo);\r\n    getLyrics(artist, title);\r\n  }\r\n\r\n  async function getLyrics(artist, title) {\r\n    const res = await fetch(`${baseURL}/v1/${artist}/${title}`);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setLyrics(data.lyrics);\r\n    setShouldShowLoader(false);\r\n    setShouldRenderSongList(false);\r\n    setShouldRenderLyricsPanel(true);\r\n  }\r\n\r\n  return (\r\n    <StyledItem>\r\n      <span>\r\n        {artist} - {title}\r\n      </span>\r\n      <StyledButton onClick={handleGetLyricsClick}>Get Lyrics</StyledButton>\r\n    </StyledItem>\r\n  );\r\n}\r\n\r\nItem.propTypes = {\r\n  artist: PropTypes.string.isRequired,\r\n  cover: PropTypes.string.isRequired,\r\n  preview: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  border-bottom: 1px solid var(--dark-blue);\r\n  font-size: 1.5rem;\r\n\r\n  & > span {\r\n    flex-basis: 60%;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0.5rem 1.5rem;\r\n  border-radius: 15px;\r\n  font-size: 1.2rem;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { LyricsContext } from '../LyricsContext';\r\n\r\nimport { List, Paragraph } from 'styles/MyStyledComponents';\r\n\r\nimport Item from './Item/Item';\r\n\r\nexport default function SongList() {\r\n  const { response } = useContext(LyricsContext);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {response.data.length === 0 ? (\r\n          <Paragraph>No results found. Try a different keyword.</Paragraph>\r\n        ) : (\r\n          response.data.map(song => (\r\n            <Item\r\n              key={song.id}\r\n              artist={song.artist.name}\r\n              title={song.title}\r\n              cover={song.album.cover_medium}\r\n              preview={song.preview}\r\n            />\r\n          ))\r\n        )}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { LyricsContext } from '../LyricsContext';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function LyricsPanel() {\r\n  const { lyrics, songInfo } = useContext(LyricsContext);\r\n  const { artist, cover, preview, title } = songInfo;\r\n\r\n  return (\r\n    <>\r\n      <SongInfoContainer>\r\n        <CoverContainer>\r\n          <img src={cover} alt='album cover' />\r\n        </CoverContainer>\r\n        <SongInfo>\r\n          <h2>{title}</h2>\r\n          <h3>{artist}</h3>\r\n          <SongPreviewButton as='a' href={preview} target='_blank' rel='noreferrer'>\r\n            <FontAwesomeIcon icon={faPlayCircle} /> Song Preview\r\n          </SongPreviewButton>\r\n        </SongInfo>\r\n      </SongInfoContainer>\r\n      {!lyrics && (\r\n        <Paragraph>Unfortunately we couldn't find the lyrics for this song...😢</Paragraph>\r\n      )}\r\n      <SongLyrics>{lyrics}</SongLyrics>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SongInfoContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 0 3rem;\r\n`;\r\n\r\nconst CoverContainer = styled.section`\r\n  & img {\r\n    width: 200px;\r\n\r\n    @media (min-width: 768px) {\r\n      width: 250px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SongInfo = styled.section`\r\n  flex-grow: 1;\r\n  padding: 1rem 2rem;\r\n  text-align: center;\r\n\r\n  & h2 {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 2.4rem;\r\n  }\r\n\r\n  & h3 {\r\n    margin: 0 0 1.5rem;\r\n    font-size: 1.8rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst SongPreviewButton = styled(Button)`\r\n  display: inline-block;\r\n  padding: 0.5rem 1.2rem;\r\n  border-radius: 15px;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst SongLyrics = styled.section`\r\n  padding: 0 0 3rem;\r\n  white-space: pre-wrap;\r\n`;\r\n","import React, { useContext, useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { baseURL, LyricsContext } from './LyricsContext';\r\n\r\nimport { Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport SearchForm from './SearchForm/SearchForm';\r\nimport SongList from './SongList/SongList';\r\nimport LyricsPanel from './LyricsPanel/LyricsPanel';\r\n\r\nexport default function LyricsSearch() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const {\r\n    setResponse,\r\n    setShouldShowLoader,\r\n    shouldShowLoader,\r\n    shouldRenderLyricsPanel,\r\n    setShouldRenderLyricsPanel,\r\n    shouldRenderSongList,\r\n    setShouldRenderSongList,\r\n  } = useContext(LyricsContext);\r\n\r\n  function handleInputChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    if (!searchTerm) return;\r\n\r\n    setShouldShowLoader(true);\r\n    searchSongs(searchTerm);\r\n  }\r\n\r\n  async function searchSongs(term) {\r\n    const res = await fetch(`${baseURL}/suggest/${term.trim()}`);\r\n    const data = await res.json();\r\n\r\n    setResponse(data);\r\n    setShouldShowLoader(false);\r\n    setShouldRenderSongList(true);\r\n    setShouldRenderLyricsPanel(false);\r\n    setSearchTerm('');\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Wrapper>\r\n        <Title>Find the lyrics for your favorite song! 🎵</Title>\r\n        <SearchForm\r\n          handleChange={handleInputChange}\r\n          handleSubmit={handleFormSubmit}\r\n          term={searchTerm}\r\n        />\r\n        {shouldShowLoader && <Loader />}\r\n        {shouldRenderSongList && <SongList />}\r\n        {shouldRenderLyricsPanel && <LyricsPanel />}\r\n      </Wrapper>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/404.f20cfb66.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport Image404 from 'assets/404.png';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Oops...!</Title>\r\n      <Paragraph>We can't seem to find the page you're looking for...</Paragraph>\r\n      <Button to='/'>\r\n        Go back home <FontAwesomeIcon icon={faHome} />\r\n      </Button>\r\n      <Image src={Image404} alt='Page not found' />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Button = styled(Link)`\r\n  display: inline-block;\r\n  margin: 0 auto 1.5rem;\r\n  padding: 0.5rem 2rem;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background: var(--dark-blue);\r\n  color: var(--light-gray);\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 2rem auto 3rem;\r\n    padding: 1rem 2rem;\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  border-radius: 3px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 3rem auto 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nconst URL = 'https://type.fit/api/quotes';\r\n\r\nexport default function Quotes() {\r\n  const [quoteText, setQuoteText] = useState('');\r\n  const [quoteAuthor, setQuoteAuthor] = useState('');\r\n\r\n  const generateRandomQuote = useCallback(async () => {\r\n    const quotes = await getQuotes();\r\n    const quotesCount = quotes.length;\r\n    const randomIndex = ~~(Math.random() * quotesCount);\r\n    const quote = quotes[randomIndex];\r\n    setQuoteText(`\"${quote.text}\"`);\r\n    setQuoteAuthor(quote.author);\r\n  }, []);\r\n\r\n  const getQuotes = async () => {\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateRandomQuote();\r\n  }, [generateRandomQuote]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Get inspired with our quotes! 🧠</Title>\r\n      <Paragraph>{quoteText}</Paragraph>\r\n      <QuoteAuthor>{quoteAuthor ?? 'Author Unknown'}</QuoteAuthor>\r\n      <GetNewQuoteButton onClick={generateRandomQuote}>Get New Quote</GetNewQuoteButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst QuoteAuthor = styled(Paragraph)`\r\n  font-size: 1.4rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  text-align: right;\r\n`;\r\n\r\nconst GetNewQuoteButton = styled(Button)`\r\n  margin: 2rem 0 0;\r\n  padding: 1rem 2rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Paragraph, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nconst demo_cors_link = 'https://cors-anywhere.herokuapp.com/corsdemo';\r\n\r\nexport default function RequestPanel({ setShouldShowRequestPanel }) {\r\n  return (\r\n    <Wrapper>\r\n      <Paragraph>\r\n        If you're seeing this message it means that the access to the server has timed out. In order\r\n        to get access to it, click the button below and on the next page click on 'Request temporary\r\n        access to demo server'. After the confirmation appears, you can come back here and check the\r\n        weather for your city!\r\n      </Paragraph>\r\n      <StyledButton as='a' href={demo_cors_link} target='_blank'>\r\n        Request access\r\n      </StyledButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nRequestPanel.propTypes = {\r\n  setShouldShowRequestPanel: PropTypes.func.isRequired,\r\n};\r\n\r\nconst StyledButton = styled(Button)`\r\n  display: inline-block;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport RequestPanel from 'components/views/Weather/RequestPanel/RequestPanel';\r\nimport { Button, Paragraph, Title, Wrapper } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faBolt,\r\n  faCloud,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faMoon,\r\n  faSnowflake,\r\n  faSun,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst APIKey = 'd8bda41b14ee677c9b19adfc045f9b2b';\r\nconst mPerSecToKmPerHrRatio = 3.6;\r\n\r\nexport default function Weather() {\r\n  const [city, setCity] = useState('');\r\n  const [shouldShowErrorMessage, setShouldShowErrorMessage] = useState(false);\r\n  const [weatherData, setWeatherData] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n  const [shouldShowRequestPanel, setShouldShowRequestPanel] = useState(true);\r\n\r\n  useEffect(() => {\r\n    document.querySelector('input').focus();\r\n  }, []);\r\n\r\n  const handleInputChange = e => setCity(e.target.value);\r\n  const handleButtonClick = e => {\r\n    e.preventDefault();\r\n    if (!city) return;\r\n\r\n    setShouldShowRequestPanel(false);\r\n    getWeatherForGivenCity(city);\r\n    setShouldShowLoader(true);\r\n    setShouldShowErrorMessage(false);\r\n  };\r\n\r\n  const getWeatherForGivenCity = city => {\r\n    const cors_proxy = 'https://cors-anywhere.herokuapp.com/';\r\n    const URL = `${cors_proxy}http://api.openweathermap.org/data/2.5/weather?q=${city.trim()}&appid=${APIKey}&units=metric`;\r\n    fetch(URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.cod !== 200) {\r\n          setShouldShowErrorMessage(true);\r\n          setShouldShowLoader(false);\r\n          setCity('');\r\n          setWeatherData('');\r\n          throw new Error('City not found...');\r\n        }\r\n\r\n        setShouldShowErrorMessage(false);\r\n        extractWeatherData(data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const extractWeatherData = data => {\r\n    const weatherData = {\r\n      cityName: data.name,\r\n      temperature: Math.round(data.main.temp),\r\n      feelsLike: Math.round(data.main.feels_like),\r\n      humidity: data.main.humidity,\r\n      pressure: data.main.pressure,\r\n      wind: Math.round(data.wind.speed * mPerSecToKmPerHrRatio),\r\n      condition: data.weather[0].main,\r\n      conditionDescription: data.weather[0].description,\r\n      sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString(),\r\n      sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString(),\r\n      hasSunSet: new Date().getTime() >= data.sys.sunset * 1000 ? true : false,\r\n    };\r\n\r\n    setWeatherData(weatherData);\r\n    setShouldShowLoader(false);\r\n    setCity('');\r\n  };\r\n\r\n  const renderWeatherData = () => {\r\n    const {\r\n      cityName,\r\n      condition,\r\n      conditionDescription,\r\n      feelsLike,\r\n      hasSunSet,\r\n      humidity,\r\n      pressure,\r\n      sunrise,\r\n      sunset,\r\n      temperature,\r\n      wind,\r\n    } = weatherData;\r\n\r\n    const conditionDescriptionFormatted =\r\n      conditionDescription.slice(0, 1).toUpperCase() + conditionDescription.slice(1);\r\n\r\n    return (\r\n      <section>\r\n        <WeatherMainInfo>\r\n          <p className='city'>{cityName}</p>\r\n          <p className='temperature'>{temperature}&deg;</p>\r\n          <small className='feels_like'>Feels like {feelsLike}&deg;</small>\r\n          <p className='condition'>\r\n            {conditionDescriptionFormatted} {getIcon(condition, hasSunSet)}\r\n          </p>\r\n        </WeatherMainInfo>\r\n        <WeatherInfoList>\r\n          <li>\r\n            Wind <span>{wind} km/h</span>\r\n          </li>\r\n          <li>\r\n            Humidity <span>{humidity}%</span>\r\n          </li>\r\n          <li>\r\n            Pressure <span>{pressure} hPa</span>\r\n          </li>\r\n          <li>\r\n            Sunrise <span>{sunrise}</span>\r\n          </li>\r\n          <li>\r\n            Sunset <span>{sunset}</span>\r\n          </li>\r\n        </WeatherInfoList>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  const getIcon = (condition, hasSunSet) => {\r\n    if (condition === 'Clear') {\r\n      if (hasSunSet) return <FontAwesomeIcon icon={faMoon} />;\r\n      return <FontAwesomeIcon icon={faSun} />;\r\n    }\r\n    if (condition === 'Clouds') return <FontAwesomeIcon icon={faCloud} />;\r\n    if (condition === 'Rain') return <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n    if (condition === 'Snow') return <FontAwesomeIcon icon={faSnowflake} />;\r\n    if (condition === 'Drizzle') return <FontAwesomeIcon icon={faCloudRain} />;\r\n    if (condition === 'Thunderstorm') return <FontAwesomeIcon icon={faBolt} />;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Get current weather for a given location 🌤️</Title>\r\n      <Form>\r\n        <CityInput\r\n          type='text'\r\n          id='city'\r\n          value={city}\r\n          onChange={handleInputChange}\r\n          placeholder='Search city'\r\n          autoComplete='off'\r\n        />\r\n        <SearchButton onClick={handleButtonClick}>Search</SearchButton>\r\n      </Form>\r\n      {shouldShowLoader && <Loader />}\r\n      {weatherData && renderWeatherData()}\r\n      {shouldShowErrorMessage && <Paragraph>City not found...Please try again.</Paragraph>}\r\n      {shouldShowRequestPanel && (\r\n        <RequestPanel setShouldShowRequestPanel={setShouldShowRequestPanel} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 0 1rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 2rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 3rem;\r\n  }\r\n`;\r\n\r\nconst CityInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 3px 0 0 3px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n\r\n  &:focus {\r\n    border: 1px solid var(--dark-blue);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n  padding: 0.5rem 2rem;\r\n  border: 1px solid var(--dark-blue);\r\n  border-radius: 0 3px 3px 0;\r\n`;\r\n\r\nconst WeatherMainInfo = styled.section`\r\n  margin: 0 auto 1rem;\r\n  text-align: center;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n\r\n  & p.city {\r\n    font-size: 1.8rem;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  & p.temperature {\r\n    font-size: 3.4rem;\r\n  }\r\n\r\n  & small.feels_like {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 auto 2rem;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    & p.city {\r\n      font-size: 2.2rem;\r\n    }\r\n\r\n    & p.temperature {\r\n      font-size: 4rem;\r\n    }\r\n\r\n    & small.feels_like {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeatherInfoList = styled.ul`\r\n  list-style-type: none;\r\n\r\n  & li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    border-bottom: 1px solid #888;\r\n    font-size: 1.5rem;\r\n\r\n    @media (min-width: 360px) {\r\n      font-size: 1.6rem;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n\r\n  & li:first-child {\r\n    border-top: 1px solid #888;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'styles/MyStyledComponents';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRandom, faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Form({ handleChange, handleRandomClick, handleSubmit, term }) {\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <StyledInput\r\n        type='text'\r\n        placeholder='Search for meals...'\r\n        value={term}\r\n        onChange={handleChange}\r\n      />\r\n      <SearchIcon>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </SearchIcon>\r\n      <RandomIcon onClick={handleRandomClick}>\r\n        <FontAwesomeIcon icon={faRandom} />\r\n      </RandomIcon>\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleRandomClick: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto 2rem;\r\n  text-align: center;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 5px 0 0 5px;\r\n  outline: none;\r\n  background-color: #fff;\r\n  font-family: var(--main-font);\r\n  font-size: 1.5rem;\r\n  transition: border 0.3s ease;\r\n  caret-color: var(--dark-blue);\r\n\r\n  &:focus {\r\n    border: 1px solid #999;\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Button)`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0 5px 5px 0;\r\n`;\r\n\r\nconst RandomIcon = styled(Button)`\r\n  position: relative;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0 0 0 1rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nexport default function MealsPanel({ foundMeals, getMealDetails, term }) {\r\n  const meals = foundMeals.map(meal => (\r\n    <MealContainer key={meal.idMeal} onClick={() => getMealDetails(meal.idMeal)}>\r\n      <img src={meal.strMealThumb} alt={meal.strMeal} />\r\n      <h2>{meal.strMeal}</h2>\r\n    </MealContainer>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>{meals}</Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nMealsPanel.propTypes = {\r\n  foundMeals: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleMealClick: PropTypes.func.isRequired,\r\n  term: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 1rem;\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nconst MealContainer = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 14rem;\r\n  border: 3px solid var(--light-gray);\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  & img {\r\n    width: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  & h2 {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: grid;\r\n    place-items: center;\r\n    opacity: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    color: var(--light-gray);\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n\r\n  &:hover img {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:hover h2 {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Paragraph } from 'styles/MyStyledComponents';\r\n\r\nexport default function SingleMealPanel({ mealDetails }) {\r\n  function getIngredients() {\r\n    let ingredients = [];\r\n\r\n    for (let i = 1; i <= 20; i++) {\r\n      if (!mealDetails[`strIngredient${i}`]) break;\r\n      ingredients.push(`${mealDetails[`strIngredient${i}`]} - ${mealDetails[`strMeasure${i}`]}`);\r\n    }\r\n\r\n    const ingredientItems = ingredients.map(item => (\r\n      <li key={item}>{item.slice(0, 1).toUpperCase() + item.slice(1)}</li>\r\n    ));\r\n\r\n    return ingredientItems;\r\n  }\r\n\r\n  function getYouTubeVideo() {\r\n    const youTubeLink = mealDetails.strYoutube.replace('watch?v=', 'embed/');\r\n    return (\r\n      <iframe\r\n        src={youTubeLink}\r\n        title={mealDetails.strMeal}\r\n        frameBorder='0'\r\n        allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n        allowFullScreen\r\n      ></iframe>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SingleMealContainer>\r\n      <h2>{mealDetails.strMeal}</h2>\r\n      <img src={mealDetails.strMealThumb} alt={mealDetails.strMeal} />\r\n      <Text>Category: {mealDetails.strCategory}</Text>\r\n      <Text>Origin: {mealDetails.strArea}</Text>\r\n      <h3>Ingredients:</h3>\r\n      <ul>{getIngredients()}</ul>\r\n      <h3>Instructions:</h3>\r\n      <Instructions>{mealDetails.strInstructions}</Instructions>\r\n      <FrameContainer>{getYouTubeVideo()}</FrameContainer>\r\n    </SingleMealContainer>\r\n  );\r\n}\r\n\r\nSingleMealPanel.propTypes = {\r\n  mealDetails: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SingleMealContainer = styled.section`\r\n  & h2 {\r\n    margin: 0 0 1rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n  }\r\n\r\n  & img {\r\n    display: block;\r\n    width: 20rem;\r\n    margin: 0 auto 1rem;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  & h3 {\r\n    margin: 2rem 0 1rem;\r\n    padding: 0 0 0 0.6rem;\r\n    border-left: 6px solid var(--dark-blue);\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  & ul {\r\n    padding: 0 0 0 2rem;\r\n    list-style-type: disc;\r\n  }\r\n\r\n  & li {\r\n    margin: 0 0 0.5rem;\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Paragraph)`\r\n  text-align: center;\r\n`;\r\n\r\nconst Instructions = styled(Paragraph)`\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst FrameContainer = styled.div`\r\n  margin: 2rem auto;\r\n\r\n  & iframe {\r\n    width: 100%;\r\n    min-height: 180px;\r\n\r\n    @media (min-width: 768px) {\r\n      height: 281px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nimport Loader from 'components/Loader/Loader';\r\nimport { Title, Wrapper } from 'styles/MyStyledComponents';\r\nimport Form from './Form/Form';\r\nimport MealsPanel from './MealsPanel/MealsPanel';\r\nimport SingleMealPanel from './SingleMealPanel/SingleMealPanel';\r\n\r\nexport default function MealFinder() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [foundMeals, setFoundMeals] = useState('');\r\n  const [shouldShowLoader, setShouldShowLoader] = useState(false);\r\n  const [mealDetails, setMealDetails] = useState('');\r\n  const [shouldShowError, setShouldShowError] = useState(false);\r\n\r\n  function handleInputChange(e) {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  function handleSearchFormSubmit(e) {\r\n    e.preventDefault();\r\n    if (!searchTerm) return;\r\n\r\n    setShouldShowLoader(true);\r\n    searchMeal(searchTerm);\r\n    setSearchTerm('');\r\n    setMealDetails('');\r\n    setShouldShowError(false);\r\n  }\r\n\r\n  async function searchMeal(term) {\r\n    const URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${term.trim()}`;\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setFoundMeals(data.meals);\r\n    setShouldShowLoader(false);\r\n    if (!data.meals) {\r\n      setShouldShowError(true);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function handleRandomClick(e) {\r\n    e.preventDefault();\r\n    getRandomMeal();\r\n    setShouldShowLoader(true);\r\n  }\r\n\r\n  async function getRandomMeal() {\r\n    setShouldShowError(false);\r\n    const URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setMealDetails(data.meals[0]);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  async function getMealDetails(mealID) {\r\n    setShouldShowLoader(true);\r\n    const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealID}`;\r\n    const res = await fetch(URL);\r\n    const data = await res.json();\r\n    setMealDetails(data.meals[0]);\r\n    setShouldShowLoader(false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Find recipes for your favorite meals! 😋</Title>\r\n      <Form\r\n        term={searchTerm}\r\n        handleChange={handleInputChange}\r\n        handleRandomClick={handleRandomClick}\r\n        handleSubmit={handleSearchFormSubmit}\r\n      />\r\n      {shouldShowLoader && <Loader />}\r\n      {shouldShowError && <p>No results. Try a different keyword.</p>}\r\n      {foundMeals && !mealDetails && (\r\n        <MealsPanel foundMeals={foundMeals} getMealDetails={getMealDetails} term={searchTerm} />\r\n      )}\r\n      {mealDetails && <SingleMealPanel mealDetails={mealDetails} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from 'context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Navigation() {\r\n  const { closeSidebar, sidebarRef } = useContext(AppContext);\r\n\r\n  return (\r\n    <Sidebar ref={sidebarRef}>\r\n      <CloseSidebarIcon onClick={closeSidebar}>\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </CloseSidebarIcon>\r\n      <List>\r\n        <ListItem>\r\n          <StyledNavLink to='/' exact activeClassName='active-link' onClick={closeSidebar}>\r\n            Home\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/quotes' activeClassName='active-link' onClick={closeSidebar}>\r\n            Quotes\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/weather' activeClassName='active-link' onClick={closeSidebar}>\r\n            Weather\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink to='/exchange-rates' activeClassName='active-link' onClick={closeSidebar}>\r\n            Exchange Rates\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink\r\n            to='/lyrics-app'\r\n            exact\r\n            activeClassName='active-link'\r\n            onClick={closeSidebar}\r\n          >\r\n            Song Lyrics\r\n          </StyledNavLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledNavLink\r\n            to='/meal-finder'\r\n            exact\r\n            activeClassName='active-link'\r\n            onClick={closeSidebar}\r\n          >\r\n            Meal Finder\r\n          </StyledNavLink>\r\n        </ListItem>\r\n      </List>\r\n    </Sidebar>\r\n  );\r\n}\r\n\r\nconst Sidebar = styled.nav`\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 100vh;\r\n  background-color: var(--light-blue);\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n\r\n  @media (min-width: 360px) {\r\n    width: 250px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst CloseSidebarIcon = styled.button`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  border: none;\r\n  outline: none;\r\n  background: transparent;\r\n  color: var(--light-gray);\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 2.4rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    top: 2rem;\r\n    right: 2rem;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    right: 4rem;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  margin: 0 0 2rem;\r\n  text-align: center;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  position: relative;\r\n  color: var(--light-gray);\r\n  font-size: 1.5rem;\r\n  text-decoration: none;\r\n\r\n  &.active-link {\r\n    font-weight: bold;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 2px 0 0;\r\n    border-bottom: 1px solid var(--light-gray);\r\n    transform: scale(0, 1);\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  &:hover::after,\r\n  &:focus::after {\r\n    transform: scale(1, 1);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from 'context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation/Navigation';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithubAlt, faLinkedinIn, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default function Header() {\r\n  const { openSidebar } = useContext(AppContext);\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Logo to='/'>API Hub</Logo>\r\n      <IconWrapper>\r\n        <Icon as='a' href='https://github.com/JalalMallah' target='_blank'>\r\n          <FontAwesomeIcon icon={faGithubAlt} />\r\n        </Icon>\r\n        <Icon as='a' href='https://www.linkedin.com/in/jalal-mallah' target='_blank'>\r\n          <FontAwesomeIcon icon={faLinkedinIn} />\r\n        </Icon>\r\n        <Icon as='a' href='https://twitter.com/jalal_mallah_' target='_blank'>\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </Icon>\r\n        <OpenSidebarIcon onClick={openSidebar}>\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </OpenSidebarIcon>\r\n      </IconWrapper>\r\n      <Navigation />\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  background-color: var(--dark-blue);\r\n  color: var(--light-gray);\r\n\r\n  @media (min-height: 700px) {\r\n    position: sticky;\r\n    z-index: 2;\r\n    top: 0;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 2rem 4rem;\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  margin: 0;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  color: var(--light-gray);\r\n  font-size: 1.8rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n  transition: color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--custom-yellow);\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst OpenSidebarIcon = styled.button`\r\n  margin: 0 0 0 2rem;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: var(--light-gray);\r\n  font-size: 2.2rem;\r\n  transition: color 0.3s ease;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--custom-yellow);\r\n  }\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 0 2.5rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 0 4rem;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(OpenSidebarIcon)`\r\n  margin: 0 0 0 1.2rem;\r\n  font-size: 1.4rem;\r\n\r\n  @media (min-width: 360px) {\r\n    margin: 0 0 0 1.5rem;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 0 0 0 2rem;\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LyricsProvider from './views/LyricsSearch/LyricsContext';\n\nimport ExchangeRates from 'components/views/ExchangeRates/ExchangeRates';\nimport Home from 'components/views/Home/Home';\nimport LyricsSearch from 'components/views/LyricsSearch/LyricsSearch';\nimport PageNotFound from 'components/views/PageNotFound/PageNotFound';\nimport Quotes from 'components/views/Quotes/Quotes';\nimport Weather from 'components/views/Weather/Weather';\nimport MealFinder from 'components/views/MealFinder/MealFinder';\n\nimport Header from 'components/Header/Header';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/quotes' component={Quotes} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/exchange-rates' component={ExchangeRates} />\n        <Route path='/lyrics-app' exact>\n          <LyricsProvider>\n            <LyricsSearch />\n          </LyricsProvider>\n        </Route>\n        <Route path='/meal-finder' exact component={MealFinder} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppProvider from 'context';\n\nimport GlobalStyle from 'styles/GlobalStyle';\n\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}